var g={jasmineStarted(e){console.group("jasmine: started",e)},suiteStarted(e){console.group(`jasmine suite: ${e.fullName} %c...`,"color: gray")},specStarted(e){console.log(`jasmine spec: ${e.description} %c...`,"color: gray")},specDone({failedExpectations:e,description:c,passedExpectations:s,pendingReason:o,status:t}){t==="pending"?console.log(`jasmine spec: ${c}%c - %cPENDING%c because ${o}`,"color: gray","color: orange","color: auto"):console.log(`jasmine spec: ${c}%c - %c${s.length} PASSED%c, %c${e.length} FAILED`,"color: gray","color: green","color: gray","color: red");for(let n=0;n<e.length;n++){let a=e[n];console.log(`jasmine spec failure: ${a.message}
%c${a.stack.trim()}`,"color: orange;")}},suiteDone({failedExpectations:e,fullName:c,status:s}){console.groupEnd(),console.log(`jasmine suite: ${c} %c- %c${s.toUpperCase()}`,"color: gray",s==="passed"?"color:green":s==="pending"?"color:orange":"color:red");for(let o=0;o<e.length;o++)console.log("jasmine: suite failure: "+e[o].message),console.log(e[o].stack)},jasmineDone({overallStatus:e,totalTime:c,failedExpectations:s}){console.groupEnd(),console.log(`jasmine: done: status %c${e}%c, total-time: %c${c}ms`,e==="passed"?"color:green":e==="pending"?"color:orange":"color:red","color: auto","color: cornflowerblue");for(let o=0;o<s.length;o++)console.log("jasmine: global failure: "+s[o].message,s[o].stack)}};var i=window.jasmineRequire,u=i.core(i),l=u.getEnv(),r=i.interface(u,l);r.before=r.beforeAll;r.after=r.afterAll;r.beforeSuite=new Set;r.afterSuite=new Set;for(let e of["describe","fdescribe","xdescribe"]){let c=r[e];r[e]=function(s,o){return c.call(this,s,function(){let t=this.sharedUserContext();try{for(let n of r.beforeSuite)n.call(this,t);o.apply(this)}finally{for(let n of r.afterSuite)n.call(this,t)}})}}r.beforeSuite.add(function(e){e.suite=Object.create(this.result),e.suite.fixtures=[]});var m={};r.beforeEach(function(){m.suite=this.suite});Object.assign(window,r);l.addReporter(g);l.configure({});var f=new URLSearchParams(window.location.search);f.has("spec")?import(`../${f.get("spec")}.spec.mjs`).then(()=>l.execute()):console.warn("no spec specified, please use search param 'spec' to specify a spec to run.");
//# sourceMappingURL=runner.mjs.map
