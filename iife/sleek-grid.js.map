{
  "version": 3,
  "sources": ["../lib/column-controller.mjs", "../lib/row-controller.mjs", "../lib/styles/sleek.mjs", "../lib/styles/static.mjs", "../lib/utils/nano-memoize.mjs", "../lib/utils/index.mjs", "../lib/sleek-grid.mjs", "../lib/components/grid-area.mjs", "../lib/features/row-resize.mjs", "../lib/features/row-dnd.mjs", "../lib/components/grid-row.mjs", "../lib/features/column-dnd.mjs", "../lib/features/column-resize.mjs", "../lib/icons.mjs", "../lib/components/header-row.mjs", "../lib/components/root.mjs", "../lib/utils/grid-api.mjs", "../lib/features/highlight.mjs", "../lib/index.mjs"],
  "sourcesContent": ["let COLUMN_BUFFER = 0;\r\n\r\nexport class ColumnController {\r\n\r\n    constructor(grid) {\r\n        this.grid = grid;\r\n        this.columns = [];\r\n        this.column = null;\r\n        this.columnIndex = 0;\r\n        this.leftIndex = 0;\r\n        this.rightIndex = 0;\r\n        this.indices = [];\r\n        this.refresh = null;\r\n\r\n        this.createCell = (that, columnIndex) => {\r\n            this.column = this.columns[this.columnIndex = columnIndex];\r\n            if (that.row.id === \"header\") {\r\n                if (this.column.id === \"header\") {\r\n                    const node = grid.createStub();\r\n                    grid.updateStub(node, this);\r\n                    return node;\r\n                } else {\r\n                    const node = grid.createColumnHeader();\r\n                    grid.updateColumnHeader(node, this);\r\n                    return node;\r\n                }\r\n            } else {\r\n                if (this.column.id === \"header\") {\r\n                    const node = grid.createRowHeader();\r\n                    grid.updateRowHeader(node, this, that);\r\n                    return node;\r\n                } else {\r\n                    const node = grid.createGridCell();\r\n                    grid.updateGridCell(node, this, that);\r\n                    return node;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.updateCell = (that, node, columnIndex) => {\r\n            this.column = this.columns[this.columnIndex = columnIndex];\r\n            if (that.row.id === \"header\") {\r\n                if (this.column.id === \"header\") {\r\n                    grid.updateStub(node, this);\r\n                    return node;\r\n                } else {\r\n                    grid.updateColumnHeader(node, this);\r\n                    return node;\r\n                }\r\n            } else {\r\n                if (this.column.id === \"header\") {\r\n                    grid.updateRowHeader(node, this, that);\r\n                    return node;\r\n                } else {\r\n                    grid.updateGridCell(node, this, that);\r\n                    return node;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render(parent, that) {\r\n        const {indices} = this;\r\n        let child = parent.firstChild, c = 0;\r\n        while (child && c < indices.length) {\r\n            this.updateCell(that, child, indices[c++]);\r\n            child = child.nextSibling;\r\n        }\r\n        while (child) {\r\n            const exit = child;\r\n            child = child.nextSibling;\r\n            parent.removeChild(exit);\r\n        }\r\n        while (c < indices.length) {\r\n            parent.append(this.createCell(that, indices[c++]));\r\n        }\r\n    }\r\n\r\n    layout(columns, scrollLeft, clientWidth) {\r\n        const {leftIndex, rightIndex} = this.range(columns, scrollLeft, clientWidth);\r\n\r\n        const indices = this.indices;\r\n        const create = [];\r\n        const update = [];\r\n        const remove = [];\r\n\r\n        const pool = new Map();\r\n        for (let c = 0; c < indices.length; c++) {\r\n            pool.set(this.columns[indices[c]].id, c);\r\n        }\r\n\r\n        for (let index = leftIndex; index < rightIndex; ++index) {\r\n            if (pool.delete(columns[index].id)) {\r\n                update.push(index);\r\n            } else {\r\n                create.push(index);\r\n            }\r\n        }\r\n        for (const c of pool.values()) {\r\n            if (create.length > 0) {\r\n                update.push(create.pop());\r\n            } else {\r\n                remove.push(c);\r\n            }\r\n        }\r\n\r\n        this.columns = columns;\r\n        this.leftIndex = leftIndex;\r\n        this.rightIndex = rightIndex;\r\n        this.indices = [...update, ...create];\r\n\r\n        if (update.length || create.length) {\r\n            this.update = (parent, that) => {\r\n                const {childNodes} = parent;\r\n                let c = remove.length;\r\n                while (c > 0) {\r\n                    childNodes[remove[--c]].remove();\r\n                }\r\n                for (c = 0; c < update.length; c++) {\r\n                    this.updateCell(that, childNodes[c], update[c]);\r\n                }\r\n                for (c = 0; c < create.length; c++) {\r\n                    parent.append(this.createCell(that, create[c]));\r\n                }\r\n            };\r\n        } else {\r\n            this.update = ColumnController.prototype.update;\r\n        }\r\n    }\r\n\r\n    update(parent, that) {\r\n        for (const child of parent.childNodes) {\r\n            this.updateCell(that, child, child.columnIndex);\r\n        }\r\n    }\r\n\r\n    sync(scrollLeft, clientWidth) {\r\n        const {leftIndex, rightIndex} = this.range(this.columns, scrollLeft, clientWidth);\r\n\r\n        let enterFrom;\r\n        let enterTo;\r\n        let leaveFrom;\r\n        let leaveTo;\r\n\r\n        if (leftIndex < this.leftIndex || rightIndex < this.rightIndex) {\r\n            enterFrom = leftIndex;\r\n            enterTo = Math.min(this.leftIndex, rightIndex);\r\n            leaveFrom = Math.max(this.leftIndex, rightIndex);\r\n            leaveTo = this.rightIndex;\r\n        }\r\n\r\n        if (rightIndex > this.rightIndex || leftIndex > this.leftIndex) {\r\n            enterFrom = Math.max(this.rightIndex, leftIndex);\r\n            enterTo = rightIndex;\r\n            leaveFrom = this.leftIndex;\r\n            leaveTo = Math.min(this.rightIndex, leftIndex);\r\n        }\r\n\r\n        this.leftIndex = leftIndex;\r\n        this.rightIndex = rightIndex;\r\n\r\n        if (enterFrom !== undefined) {\r\n\r\n            const indices = this.indices;\r\n            const remove = [];\r\n            const recycle = [];\r\n            const create = [];\r\n\r\n            let u = 0, enterIndex = enterFrom;\r\n            for (let c = 0; c < indices.length; c++) {\r\n                const columnIndex = indices[c];\r\n                if (columnIndex < leaveTo && columnIndex >= leaveFrom) {\r\n                    if (enterIndex < enterTo) {\r\n                        recycle.push(u);\r\n                        indices[u++] = enterIndex++;\r\n                    } else {\r\n                        remove.push(c);\r\n                    }\r\n                } else {\r\n                    indices[u++] = columnIndex;\r\n                }\r\n            }\r\n            while (enterIndex < enterTo) {\r\n                create.push(enterIndex);\r\n                indices[u++] = enterIndex++;\r\n            }\r\n\r\n            indices.length = u;\r\n\r\n            this.refresh = (parent, that) => {\r\n                const childNodes = parent.childNodes;\r\n                let c = remove.length;\r\n                while (c > 0) {\r\n                    parent.removeChild(childNodes[remove[--c]]);\r\n                }\r\n                for (c = 0; c < recycle.length; c++) {\r\n                    const i = recycle[c];\r\n                    this.updateCell(that, childNodes[i], indices[i]);\r\n                }\r\n                for (c = 0; c < create.length; c++) {\r\n                    parent.append(this.createCell(that, create[c]));\r\n                }\r\n            };\r\n        } else {\r\n            this.refresh = null;\r\n        }\r\n    }\r\n\r\n    range(columns, left, width) {\r\n        let leftIndex = 0;\r\n        let rightIndex = columns.length;\r\n        if (rightIndex && width > 0) {\r\n            leftIndex = Math.max(leftIndex, findColumnIndex(columns, left) - COLUMN_BUFFER);\r\n            rightIndex = Math.min(rightIndex, 1 + findColumnIndex(columns, left + width) + COLUMN_BUFFER);\r\n        }\r\n        return {leftIndex, rightIndex};\r\n    }\r\n}\r\n\r\nexport function findColumnIndex(columns, edge) {\r\n    let middle, distance, start = 0, end = columns.length - 1;\r\n    while (start < end) {\r\n        middle = (start + end) >> 1;\r\n        const {left, width} = columns[middle];\r\n        distance = edge - left;\r\n        if (distance >= width) {\r\n            start = middle + 1; // search to the right\r\n        } else if (distance < 0) {\r\n            end = middle - 1; // search to the left\r\n        } else {\r\n            return middle;\r\n        }\r\n    }\r\n    return start;\r\n}\r\n\r\nexport function layoutColumns(columns = []) {\r\n    let left = 0;\r\n    for (let column, c = 0; c < columns.length; c++) {\r\n        column = columns[c];\r\n        left = (column.left = left) + column.width;\r\n    }\r\n    return left;\r\n}\r\n", "let ROW_BUFFER = 0;\r\n\r\nexport class RowController {\r\n\r\n    constructor(grid) {\r\n        this.grid = grid;\r\n        this.rows = [];\r\n        this.row = null;\r\n        this.rowIndex = 0;\r\n        this.topIndex = 0;\r\n        this.bottomIndex = 0;\r\n        this.indices = [];\r\n        this.update = this.render;\r\n\r\n        this.createRow = (that, rowIndex) => {\r\n            this.row = this.rows[this.rowIndex = rowIndex];\r\n            if (this.row.id === \"header\") {\r\n                const node = grid.createHeaderRow(this);\r\n                grid.updateHeaderRow(node, this);\r\n                that.render(node, this);\r\n                return node;\r\n            } else {\r\n                const node = grid.createGridRow(this);\r\n                grid.updateGridRow(node, this);\r\n                that.render(node, this);\r\n                return node;\r\n            }\r\n        };\r\n\r\n        this.updateRow = (that, node, rowIndex) => {\r\n            this.row = this.rows[this.rowIndex = rowIndex];\r\n            if (this.row.id === \"header\") {\r\n                grid.updateHeaderRow(node, this);\r\n                that.render(node, this);\r\n                return node;\r\n            } else {\r\n                grid.updateGridRow(node, this);\r\n                that.render(node, this);\r\n                return node;\r\n            }\r\n        };\r\n    }\r\n\r\n    render(parent, that) {\r\n        const {indices} = this;\r\n        let child = parent.firstChild.nextSibling, i = 0;\r\n        while (child && i < indices.length) {\r\n            this.updateRow(that, child, indices[i++]);\r\n            child = child.nextSibling;\r\n        }\r\n        while (child) {\r\n            const exit = child;\r\n            child = child.nextSibling;\r\n            parent.removeChild(exit);\r\n        }\r\n        while (i < indices.length) {\r\n            parent.appendChild(this.createRow(that, indices[i++]));\r\n        }\r\n        parent.classList.toggle(\"visible\", parent.childElementCount);\r\n    }\r\n\r\n    layout(rows, scrollTop, clientHeight) {\r\n        const {topIndex, bottomIndex} = this.range(rows, scrollTop, clientHeight);\r\n\r\n        const indices = this.indices;\r\n        const create = [];\r\n        const update = [];\r\n        const remove = [];\r\n\r\n        const pool = new Map();\r\n        for (let r = 0; r < indices.length; r++) {\r\n            pool.set(this.rows[indices[r]].id, r);\r\n        }\r\n\r\n        for (let index = topIndex; index < bottomIndex; ++index) {\r\n            if (pool.delete(rows[index].id)) {\r\n                update.push(index);\r\n            } else {\r\n                create.push(index);\r\n            }\r\n        }\r\n        for (const r of pool.values()) {\r\n            if (create.length > 0) {\r\n                update.push(create.pop());\r\n            } else {\r\n                remove.push(r);\r\n            }\r\n        }\r\n\r\n        this.rows = rows;\r\n        this.topIndex = topIndex;\r\n        this.bottomIndex = bottomIndex;\r\n        this.indices = [...update, ...create];\r\n\r\n        this.update = (parent, that) => {\r\n            const {childNodes} = parent;\r\n            let r = remove.length;\r\n            while (r > 0) {\r\n                childNodes[1 + remove[--r]].remove();\r\n            }\r\n            for (r = 0; r < update.length; r++) {\r\n                this.updateRow(that, childNodes[1 + r], update[r]);\r\n            }\r\n            for (r = 0; r < create.length; r++) {\r\n                parent.append(this.createRow(that, create[r]));\r\n            }\r\n            parent.classList.toggle(\"visible\", parent.childElementCount);\r\n        };\r\n    }\r\n\r\n    sync(scrollTop, clientHeight) {\r\n        const {topIndex, bottomIndex} = this.range(this.rows, scrollTop, clientHeight);\r\n\r\n        let enterFrom;\r\n        let enterTo;\r\n        let leaveFrom;\r\n        let leaveTo;\r\n\r\n        if (topIndex < this.topIndex || bottomIndex < this.bottomIndex) {\r\n            enterFrom = topIndex;\r\n            enterTo = Math.min(bottomIndex, this.topIndex);\r\n            leaveFrom = Math.max(bottomIndex, this.topIndex);\r\n            leaveTo = this.bottomIndex;\r\n        }\r\n\r\n        if (bottomIndex > this.bottomIndex || topIndex > this.topIndex) {\r\n            enterFrom = Math.max(topIndex, this.bottomIndex);\r\n            enterTo = bottomIndex;\r\n            leaveFrom = this.topIndex;\r\n            leaveTo = Math.min(topIndex, this.bottomIndex);\r\n        }\r\n\r\n        this.topIndex = topIndex;\r\n        this.bottomIndex = bottomIndex;\r\n\r\n        if (enterFrom !== undefined) {\r\n            const indices = this.indices;\r\n            const remove = [];\r\n            const recycle = [];\r\n            const create = [];\r\n            const refresh = [];\r\n\r\n            let u = 0, enterIndex = enterFrom;\r\n            for (let r = 0; r < indices.length; r++) {\r\n                const rowIndex = indices[r];\r\n                if (rowIndex < leaveTo && rowIndex >= leaveFrom) {\r\n                    if (enterIndex < enterTo) {\r\n                        recycle.push(u);\r\n                        indices[u++] = enterIndex++;\r\n                    } else {\r\n                        remove.push(r);\r\n                    }\r\n                } else {\r\n                    refresh.push(u);\r\n                    indices[u++] = rowIndex;\r\n                }\r\n            }\r\n            while (enterIndex < enterTo) {\r\n                create.push(enterIndex);\r\n                indices[u++] = enterIndex++;\r\n            }\r\n\r\n            indices.length = u;\r\n\r\n            this.refresh = (parent, that) => {\r\n                const {childNodes} = parent;\r\n                let r = remove.length;\r\n                while (r > 0) {\r\n                    childNodes[1 + remove[--r]].remove();\r\n                }\r\n                for (r = 0; r < recycle.length; r++) {\r\n                    const i = recycle[r];\r\n                    this.updateRow(that, childNodes[1 + i], indices[i]);\r\n                }\r\n                for (r = 0; r < create.length; r++) {\r\n                    parent.append(this.createRow(that, create[r]));\r\n                }\r\n                if (that.refresh) {\r\n                    for (r = 0; r < refresh.length; r++) {\r\n                        that.refresh(childNodes[1 + refresh[r]], this);\r\n                    }\r\n                }\r\n            };\r\n\r\n        } else {\r\n\r\n            this.refresh = RowController.prototype.refresh;\r\n        }\r\n    }\r\n\r\n    range(rows, top, height) {\r\n        let topIndex = 0;\r\n        let bottomIndex = rows.length;\r\n        if (bottomIndex && height > 0) {\r\n            topIndex = Math.max(topIndex, findRowIndex(rows, top) - ROW_BUFFER);\r\n            bottomIndex = Math.min(bottomIndex, 1 + findRowIndex(rows, top + height) + ROW_BUFFER);\r\n        }\r\n        return {topIndex, bottomIndex};\r\n    }\r\n\r\n    refresh(parent, that) {\r\n        if (that.refresh) {\r\n            let {childNodes} = parent;\r\n            for (let i = 0; i < this.indices.length; i++) {\r\n                this.row = this.rows[this.rowIndex = this.indices[i]];\r\n                that.refresh(childNodes[1 + i], this);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function findRowIndex(rows, edge) {\r\n    let middle, distance, start = 0, end = rows.length - 1;\r\n    while (start < end) {\r\n        middle = (start + end) >> 1;\r\n        const {top, height} = rows[middle];\r\n        distance = edge - top;\r\n        if (distance >= height) {\r\n            start = middle + 1; // search to the bottom\r\n        } else if (distance < 0) {\r\n            end = middle - 1; // search to the top\r\n        } else {\r\n            return middle;\r\n        }\r\n    }\r\n    return start;\r\n}\r\n\r\nexport function layoutRows(rows = []) {\r\n    let top = 0;\r\n    for (let row, r = 0; r < rows.length; r++) {\r\n        row = rows[r];\r\n        top = (row.top = top) + row.height;\r\n    }\r\n    return top;\r\n}\r\n", "export const sleekStyle = new CSSStyleSheet();\r\n\r\n// language=CSS\r\n\r\nsleekStyle.replaceSync(`\r\n\r\n    :host {\r\n        --padding: 8px;\r\n        color: var(--text-color);\r\n    }\r\n\r\n    @media (prefers-color-scheme: dark) {\r\n        #root {\r\n            --primary-color: \"dodgerblue\";\r\n            --text-color: \"white\";\r\n            --background-color: \"#444\";\r\n            --even-rows-background: \"#222\";\r\n            --odd-rows-background: \"#111\";\r\n            --border-color: \"#333\";\r\n            --shadow-color: \"rgba(0, 0, 0, 1)\";\r\n            --border-color-active: \"white\";\r\n        }\r\n    }\r\n\r\n    @media (prefers-color-scheme: light) {\r\n        #root {\r\n            --primary-color: \"dodgerblue\";\r\n            --text-color: \"black\";\r\n            --background-color: \"white\";\r\n            --even-rows-background: \"white\";\r\n            --odd-rows-background: \"#eee\";\r\n            --border-color: \"lightgrey\";\r\n            --shadow-color: \"rgba(0, 0, 0, 0.25)\";\r\n            --border-color-active: \"black\";\r\n        }\r\n    }\r\n\r\n    #view-port {\r\n        background-color: var(--background-color);\r\n    }\r\n\r\n    #top-left-area {\r\n        border-bottom: 2px solid var(--border-color);\r\n        border-right: 2px solid var(--border-color);\r\n    }\r\n\r\n    #top-area {\r\n        border-bottom: 2px solid var(--border-color);\r\n    }\r\n\r\n    #top-right-area {\r\n        border-bottom: 2px solid var(--border-color);\r\n        border-left: 2px solid var(--border-color);\r\n    }\r\n\r\n    #left-area {\r\n        border-right: 2px solid var(--border-color);\r\n    }\r\n\r\n    #center-area {\r\n    }\r\n\r\n    #right-area {\r\n        border-left: 2px solid var(--border-color);\r\n    }\r\n\r\n    #bottom-left-area {\r\n        border-top: 2px solid var(--border-color);\r\n        border-right: 2px solid var(--border-color);\r\n    }\r\n\r\n    #bottom-area {\r\n        border-top: 2px solid var(--border-color);\r\n    }\r\n\r\n    #bottom-right-area {\r\n        border-top: 2px solid var(--border-color);\r\n        border-left: 2px solid var(--border-color);\r\n    }\r\n\r\n    .area {\r\n        background-color: var(--background-color);\r\n    }\r\n\r\n    .row-shadow {\r\n        pointer-events: none;\r\n        z-index: 1000;\r\n        position: absolute;\r\n        background: transparent;\r\n        left: 50px;\r\n        height: 32px; \r\n        width: calc(100% - 50px);\r\n        box-shadow: 2px 1px 3px var(--shadow-color);\r\n    }\r\n    .column-shadow {\r\n        pointer-events: none;\r\n        z-index: 1000;\r\n        position: absolute;\r\n        background: transparent;\r\n        top: 32px;\r\n        width: 50px;\r\n        height: calc(100% - 32px);\r\n        box-shadow: 1px 2px 3px var(--shadow-color);\r\n    }\r\n\r\n    .header.cell {\r\n        background: var(--background-color);\r\n    }\r\n\r\n    .header.cell :hover,\r\n    .header.cell .active {\r\n        color: var(--border-color-active);\r\n    }\r\n\r\n    .left.header .cell-text {\r\n        text-align: center;\r\n    }\r\n\r\n    .handle {\r\n        background-color: var(--border-color);\r\n    }\r\n\r\n    .handle:hover,\r\n    .handle.active {\r\n        background-color: var(--border-color-active);\r\n    }\r\n\r\n    .row {\r\n        border-bottom: 1px solid var(--border-color);\r\n    }\r\n\r\n    .row.even {\r\n        background-color: var(--even-rows-background);\r\n    }\r\n\r\n    .row.odd {\r\n        background-color: var(--odd-rows-background);\r\n    }\r\n\r\n    .search-input {\r\n        position: absolute;\r\n        background-color: transparent;\r\n        bottom: 0;\r\n        width: 100%;\r\n        padding: var(--padding);\r\n        border: none;\r\n        outline: none;\r\n        cursor: text;\r\n        transition: padding 300ms ease;\r\n    }\r\n\r\n    .search-input:focus,\r\n    .search-input:valid {\r\n        padding-bottom: var(--search-input-padding);\r\n        transition: padding 300ms ease;\r\n    }\r\n\r\n    .search-input::-webkit-input-placeholder {\r\n        transition: color 300ms ease;\r\n    }\r\n\r\n    .search-input:not(:focus)::-webkit-input-placeholder {\r\n        color: transparent;\r\n    }\r\n\r\n    .search-hr {\r\n        position: absolute;\r\n        width: 100%;\r\n        left: 0;\r\n        bottom: 1px;\r\n        margin: -2px 0;\r\n        height: 2px;\r\n        border-bottom: 1px var(--primary-color);\r\n        background: var(--primary-color);\r\n        will-change: transform, visibility;\r\n        transition: all 200ms ease-out;\r\n        transform: scaleX(0);\r\n        visibility: hidden;\r\n        z-index: 10;\r\n    }\r\n\r\n    .search-input:focus ~ .search-hr {\r\n        transform: scaleX(1);\r\n        visibility: visible;\r\n    }\r\n\r\n    .search-label {\r\n        position: absolute;\r\n        bottom: 0;\r\n        transition: bottom 300ms ease;\r\n        padding: var(--padding);\r\n        user-select: text;\r\n    }\r\n\r\n    .search-input:focus ~ .search-label,\r\n    .search-input:valid ~ .search-label {\r\n        color: var(--primary-color);\r\n        bottom: calc(var(--search-input-padding) * 2 + .625em);\r\n        transition: bottom 300ms ease;\r\n        font-size: 0.8em;\r\n        user-select: none;\r\n    }\r\n\r\n    .cell {\r\n        border-right: 1px solid var(--border-color);\r\n    }\r\n\r\n    .cell-text {\r\n        position: relative;\r\n        -webkit-user-select: text;\r\n        user-select: text;\r\n        height: 100%;\r\n        padding: var(--padding);\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .cell-content {\r\n        position: relative;\r\n        height: 100%;\r\n    }\r\n\r\n    .cell svg {\r\n        height: 1.25em;\r\n    }\r\n\r\n    .sort-icon {\r\n        position: absolute;\r\n        margin-left: 3px;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        z-index: 100;\r\n        user-select: none;\r\n        transition: opacity 0.3s ease-in-out;\r\n    }\r\n\r\n    .cell:hover:not([sort]) .sort-icon {\r\n        opacity: .25;\r\n    }\r\n\r\n    .cell[sort=desc] .sort-icon {\r\n        transform: scaleY(-1);\r\n    }\r\n\r\n    .cell[sort] .sort-icon {\r\n        opacity: 1;\r\n    }\r\n\r\n    .menu-icon {\r\n        position: absolute;\r\n        bottom: 7px;\r\n        right: -7px;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        transition: opacity 0.3s ease-in-out;\r\n    }\r\n\r\n    .cell:hover .menu-icon {\r\n        opacity: .25;\r\n    }\r\n\r\n    .cell[search] .menu-icon {\r\n        opacity: 1;\r\n    }\r\n\r\n    .search-input:focus ~ .menu-icon,\r\n    .search-input:valid ~ .menu-icon {\r\n        opacity: 1;\r\n    }\r\n\r\n    .menu {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        padding: 0;\r\n        z-index: 100;\r\n        border: 1px solid var(--border-color);\r\n        background: var(--background-color);\r\n        box-shadow: 3px 6px 12px rgba(0, 0, 0, .5), -3px 6px 12px rgba(0, 0, 0, .25);\r\n        min-width: 32px;\r\n        width: fit-content;\r\n        min-height: 64px;\r\n        height: fit-content;\r\n    }\r\n\r\n    .menu > .item {\r\n        padding: var(--padding);\r\n        border: 2px solid transparent;\r\n        margin: -2px;\r\n    }\r\n\r\n    .menu > .separator {\r\n        padding-top: var(--padding);\r\n        padding-bottom: var(--padding);\r\n    }\r\n\r\n    .menu > .separator > .line {\r\n        border-top: 1px solid var(--border-color);\r\n    }\r\n\r\n    .menu > .item:hover {\r\n        background-color: rgb(100, 149, 237, 0.33);\r\n        border: 2px solid cornflowerblue;\r\n    }\r\n\r\n    #highlight {\r\n        position: absolute;\r\n        opacity: .66;\r\n        left: 0;\r\n        top: 0;\r\n        border: 2px solid gold;\r\n        z-index: 10 !important;\r\n        pointer-events: none;\r\n        transition: opacity 160ms ease-in-out, transform 160ms ease-out, width 160ms ease-out, height 160ms ease-out;\r\n        background-color: rgba(255, 215, 0, 0.33);\r\n    }\r\n\r\n    /* ============================================================================================================== */\r\n    /* Drag 'n Drop                                                                                                   */\r\n    /* ============================================================================================================== */\r\n\r\n    .header.cell * {\r\n        user-select: none;\r\n    }\r\n\r\n    .cell.detached {\r\n        opacity: 0.333;\r\n        z-index: 100 !important;\r\n        transition: left 160ms ease-in-out, opacity 160ms ease-in-out;\r\n    }\r\n\r\n    .row.detached {\r\n        opacity: 0.333;\r\n        z-index: 100 !important;\r\n        transition: transform 160ms ease-in-out, opacity 160ms ease-in-out;\r\n    }\r\n\r\n    .drag-n-drop .header.cell {\r\n        cursor: grab;\r\n    }\r\n\r\n    .drag-n-drop .header.cell * {\r\n        pointer-events: none !important;\r\n    }\r\n\r\n    .drag-n-drop .row > * {\r\n        cursor: no-drop;\r\n    }\r\n\r\n    .ghost {\r\n        cursor: grab;\r\n        position: fixed;\r\n        z-index: 10000;\r\n        box-shadow: 3px 6px 12px rgba(0, 0, 0, .1), -3px 6px 12px rgba(0, 0, 0, .5);\r\n        background: var(--background-color);\r\n        opacity: 0;\r\n        transition: opacity 0.25s ease-in-out;\r\n        pointer-events: none;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .ghost.cancel {\r\n        opacity: 0.33;\r\n        box-shadow: 0px 0px 0px 2px crimson, 3px 6px 12px rgba(0, 0, 0, .5), -3px 6px 12px rgba(0, 0, 0, .25);\r\n    }\r\n\r\n    .ghost.column {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n    }\r\n\r\n    .ghost.column > :first-child {\r\n        box-shadow: 1px 2px 3px var(--shadow-color);\r\n        z-index: 10;\r\n    }\r\n\r\n    .ghost.row {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: stretch;\r\n    }\r\n\r\n    .ghost.row > :first-child {\r\n        box-shadow: 2px 1px 3px var(--shadow-color);\r\n        z-index: 10;\r\n    }\r\n    \r\n    .ghost > * {\r\n        position: relative;\r\n    }\r\n\r\n    .ghost .cell.even {\r\n        background-color: var(--even-rows-background);\r\n    }\r\n\r\n    .ghost .cell.odd {\r\n        background-color: var(--odd-rows-background);\r\n    }\r\n\r\n    #drop-highlight {\r\n        pointer-events: none;\r\n        position: fixed;\r\n        box-shadow: 0px 0px 0px 2px cornflowerblue;\r\n        background-color: rgba(100, 149, 237, 0.25);\r\n        transition: transform 0.125s ease-in-out;\r\n        z-index: 1000;\r\n    }\r\n\r\n    ${/Windows/.test(navigator.userAgent) && /Chrome/.test(navigator.userAgent) ? `\r\n        /* Let's get this party started */\r\n        ::-webkit-scrollbar {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n        \r\n        /* Track */\r\n        ::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.25);\r\n            margin-top: 32px;\r\n            margin-left: 50px;\r\n        }\r\n        \r\n        /* Handle */\r\n        ::-webkit-scrollbar-thumb {\r\n            background: cornflowerblue;\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.25);\r\n        }\r\n        \r\n        ::-webkit-scrollbar-thumb:window-inactive {\r\n            background: rgba(100, 149, 237, 0.25);\r\n        }\r\n    `: \"\"}\r\n`);\r\n", "export const staticStyle = new CSSStyleSheet();\r\n// language=CSS\r\nstaticStyle.replaceSync(`\r\n        \r\n    :host {\r\n        display: block;\r\n        overflow: visible;\r\n        height: 100%;\r\n    }\r\n    \r\n    :host(.busy) *,\r\n    :host(.busy) *::after {\r\n        cursor: progress !important;\r\n    }\r\n    \r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    #root {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n    }\r\n    \r\n    #view-port {\r\n        position: absolute;\r\n        overflow: auto;\r\n        width: 100%;\r\n        height: 100%;\r\n    \r\n        --top-area-height: 0px;\r\n        --right-area-width: 0px;\r\n        --bottom-area-height: 0px;\r\n        --left-area-width: 0px;\r\n        --center-area-width: 100%;\r\n        --center-area-height: 100%;\r\n    }\r\n    \r\n    #sizer {\r\n        position: fixed;\r\n        visibility: hidden;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: -1000;\r\n    }\r\n    \r\n    .area {\r\n        visibility: hidden;\r\n        position: absolute;\r\n        overflow: auto;\r\n        width: calc(var(--center-area-width) + var(--right-area-width));\r\n        height: var(--center-area-height);\r\n        contain: layout;\r\n    }\r\n    .area.visible {\r\n        visibility: visible;\r\n    }\r\n    \r\n    .top-area {\r\n        top: 0;\r\n        height: var(--top-area-height);\r\n    }\r\n    \r\n    .right-area {\r\n        left: calc(100% - var(--right-area-width));\r\n        width: var(--right-area-width);\r\n    }\r\n    \r\n    .bottom-area {\r\n        bottom: 0;\r\n        height: var(--bottom-area-height);\r\n        margin-bottom: calc(-1 * var(--bottom-area-height));\r\n    }\r\n    \r\n    .left-area {\r\n        left: 0;\r\n        width: var(--left-area-width);\r\n    }\r\n    \r\n    .top-area, .bottom-area {\r\n        position: sticky;\r\n        overflow-y: hidden;\r\n    }\r\n    \r\n    .left-area, .right-area {\r\n        position: sticky;\r\n        overflow-x: hidden;\r\n    }\r\n    \r\n    #top-left-area {\r\n        z-index: 100;\r\n    }\r\n    \r\n    #top-area {\r\n        z-index: 50;\r\n        margin-top: calc(-1 * var(--top-area-height));\r\n        margin-left: var(--left-area-width);\r\n        min-width: calc(100% - var(--left-area-width));\r\n    }\r\n    \r\n    #top-right-area {\r\n        z-index: 100;\r\n        margin-top: calc(-1 * var(--top-area-height));\r\n    }\r\n    \r\n    #left-area {\r\n        z-index: 50;\r\n    }\r\n    \r\n    #center-area {\r\n        z-index: 0;\r\n        margin-top: var(--top-area-height);\r\n        margin-left: var(--left-area-width);\r\n        min-width: calc(100% - var(--left-area-width));\r\n    }\r\n    \r\n    #right-area {\r\n        z-index: 50;\r\n        margin-top: var(--top-area-height);\r\n    }\r\n    \r\n    #bottom-left-area {\r\n        z-index: 100;\r\n    }\r\n    \r\n    #bottom-area {\r\n        z-index: 50;\r\n        margin-left: var(--left-area-width);\r\n        min-width: calc(100% - var(--left-area-width));\r\n    }\r\n    \r\n    #bottom-right-area {\r\n        z-index: 100;\r\n    }\r\n    \r\n    :host([row-header=\"left\"]) #center-area,\r\n    :host([row-header=\"left\"]) #right-area {\r\n        margin-top: calc(-1 * var(--center-area-height));\r\n    }\r\n    \r\n    /* TODO: What follows has to be tidied up */\r\n    \r\n    .area-shadow {\r\n        display: none;\r\n    }\r\n    \r\n    .area-shadow.top,\r\n    .area-shadow.bottom {\r\n        top: 100%;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 3px;\r\n    }\r\n    \r\n    .area-shadow.left,\r\n    .area-shadow.right {\r\n        top: 0;\r\n        left: 100%;\r\n        width: 3px;\r\n        height: 100%;\r\n    }\r\n    \r\n    .row {\r\n        position: absolute;\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        outline: none;\r\n        contain: strict;\r\n    }\r\n    \r\n    .row.header {\r\n        contain: layout;\r\n    }\r\n    \r\n    .cell {\r\n        position: absolute;\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        -webkit-user-select: none;\r\n        user-select: none;\r\n    }\r\n    \r\n    .handle {\r\n        position: relative;\r\n        z-index: 100;\r\n        float: right;\r\n    }\r\n    \r\n    .handle::after {\r\n        position: absolute;\r\n        z-index: 200;\r\n        content: \"\";\r\n        background-color: transparent;\r\n    }\r\n    \r\n    .width-handle {\r\n        left: 1px;\r\n        width: 1px;\r\n        height: 100%;\r\n        margin-left: 2px;\r\n    }\r\n    \r\n    .width-handle:hover,\r\n    .width-handle.active {\r\n        left: 2px;\r\n        width: 3px;\r\n        margin-left: 0;\r\n    }\r\n    \r\n    .width-handle::after {\r\n        top: 0;\r\n        bottom: 0;\r\n        width: 9px;\r\n        margin-left: -4px;\r\n        cursor: ew-resize;\r\n    }\r\n    \r\n    .height-handle {\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 1px;\r\n    }\r\n    \r\n    .height-handle:hover,\r\n    .height-handle.active {\r\n        top: -1px;\r\n        height: 3px;\r\n    }\r\n    \r\n    .height-handle::after {\r\n        right: 0;\r\n        left: 0;\r\n        height: 9px;\r\n        margin-top: -4px;\r\n        cursor: ns-resize;\r\n    }\r\n\r\n`);\r\n\r\n\r\n", "/*\r\nMIT License\r\n\r\nCopyright (c) 2018 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar assign = Object.assign;\r\nif (typeof (assign) !== \"function\") {\r\n    assign = function () {\r\n        var a = arguments,\r\n            o = arguments[0];\r\n        if (o === null || o === undefined) {\r\n            throw new TypeError(\"Cannot convert undefined or null to object\");\r\n        }\r\n        o = Object(o);\r\n        for (var i = 1; i < a.length; i++) {\r\n            if (a[i] && typeof (a[i]) === \"object\") {\r\n                for (var k in a[i]) {\r\n                    o[k] = a[i][k];\r\n                }\r\n            }\r\n        }\r\n        return o;\r\n    };\r\n}\r\n\r\nfunction vrgs(f) {\r\n    var s = f + \"\",\r\n        i = s.indexOf(\"...\");\r\n    return i >= 0 && (i < s.indexOf(\")\") || s.indexOf(\"arguments\") >= 0);\r\n}\r\n\r\n/**\r\n *\r\n * @param fn\r\n * @param o\r\n * @return {function}\r\n */\r\nfunction nanomemoize(fn, o) {\r\n    /*o = {\r\n        serializer, // used to serialize arguments of single argument functions, multis are not serialized\r\n        equals, // equality tester, will force use of slower multiarg approach even for single arg functions\r\n        maxAge, // max cache age is ms, set > 0 && < Infinity if you want automatic clearing\r\n        maxArgs, // max args to use for signature\r\n        vargs = vrgs(fn) // set to true if function may have variable or beyond-signature arguments, default is best attempt at infering\r\n      } = {}\r\n    */\r\n    o || (o = {});\r\n    var vargs = o.vargs || vrgs(fn),\r\n        s = Object.create(null), // single arg function key/value cache\r\n        k = [], // multiple arg function arg key cache\r\n        v = [], // multiple arg function result cache\r\n        wm = new WeakMap(),\r\n        d = function (key, c, k) {\r\n            return setTimeout(function () {\r\n                if (k) { // dealing with multi-arg function, c and k are Arrays\r\n                    c.splice(key, 1);\r\n                    k.splice(key, 1);\r\n                    return;\r\n                } // dealing with single arg function, c is a WekMap or Object\r\n                c instanceof WeakMap ? c.delete(key) : delete c[key];\r\n            }, o.maxAge);\r\n        },\r\n        c = o.maxAge > 0 && o.maxAge < Infinity ? d : 0, // cache change timeout,\r\n        eq = o.equals ? o.equals : function (a, b) {\r\n            return a === b;\r\n        },\r\n        maxargs = o.maxArgs,\r\n        srlz = o.serializer,\r\n        f, // memoized function to return\r\n        u; // flag indicating a unary arg function is in use for clear operation\r\n    if (fn.length === 1 && !o.equals && !vargs) {\r\n        // for single argument functions, just use a JS object key look-up\r\n        f = (function (a) {\r\n            // strings must be serialized because cache[1] should not equal or overwrite cache[\"1\"] for value = 1 and value = \"1\"\r\n            var t = typeof a;\r\n            // set chng timeout only when new value computed, hits will not push out the tte, but it is arguable they should not\r\n            if (!srlz && ((t === \"object\" && a) || t === \"function\")) {\r\n                var r;\r\n                return wm.get(a) || ((!c || c(a, wm)), wm.set(a, r = fn.call(this, a)), r);\r\n            }\r\n            var key = t === \"number\" || t === \"boolean\" || a == null ? a : t === \"string\" ? JSON.stringify(a) : srlz(a);\r\n            return s[key] || ((!c || c(key, s)), s[key] = fn.call(this, a));\r\n        }).bind(this);\r\n        u = 1;\r\n    } else {\r\n        // for multiple arg functions, loop through a cache of all the args\r\n        // looking at each arg separately so a test can abort as soon as possible\r\n        f = (function () {\r\n            var l = maxargs || arguments.length,\r\n                i;\r\n            for (i = k.length - 1; i >= 0; i--) { // an array of arrays of args, each array represents a call signature\r\n                if (!maxargs && k[i].length !== l) continue; // cache miss if called with a different number of args\r\n                for (var j = l - 1; j >= 0 && eq(k[i][j], arguments[j]); j--) {\t// compare each arg\r\n                    if (j === 0) {\r\n                        return v[i];\r\n                    } // the args matched\r\n                }\r\n            }\r\n            i = k.length - (i + 1);\r\n            // set change timeout only when new value computed, hits will not push out the tte, but it is arguable they should not\r\n            return (!c || c(i, v, k)), v[i] = fn.apply(this, k[i] = arguments);\r\n        }).bind(this);\r\n    }\r\n    // reset all the caches\r\n    f.clear = function () {\r\n        wm = new WeakMap();\r\n        s = Object.create(null);\r\n        k = [];\r\n        v = [];\r\n    };\r\n    f.keys = function () {\r\n        return u ? null : k.slice();\r\n    };\r\n    f.values = function () {\r\n        return u ? null : v.slice();\r\n    };\r\n    f.keyValues = function () {\r\n        return u ? {primitives: assign({}, s), objects: wm} : null;\r\n    };\r\n    return f;\r\n}\r\n\r\nexport const memoize = nanomemoize;\r\n", "import {memoize} from \"./nano-memoize.mjs\";\r\n\r\nexport function useTemplate(innerHTML, constructor) {\r\n    const template = document.createElement(\"template\");\r\n    template.innerHTML = innerHTML.replace(/\\s+</g, \"<\");\r\n    function createElement() {\r\n        const root = template.content.cloneNode(true).firstChild;\r\n        constructor?.call(this, root, ...arguments);\r\n        return root;\r\n    }\r\n    createElement.template = template;\r\n    return createElement;\r\n}\r\n\r\nexport const createFilter = memoize((grid, columns) => {\r\n    const filters = [];\r\n    const body = columns.reduce((code, {field, search}, index) => {\r\n        if (search) {\r\n            const filter = new RegExp(\"^\" + escapeRegex(search).replace(/\\\\\\*/g, \".*\"), \"i\");\r\n            filters.push(filter);\r\n            const f = JSON.stringify(field);\r\n            return code + `\\n&& this[${filters.length - 1}].test(row[${f}]) // [${index}] ${f} ${filter}`;\r\n        } else {\r\n            return code;\r\n        }\r\n    }, \"row.id = id;\\nreturn true\") + \"\\n\" + grid.sourceURL(\"filter\");\r\n    if (filters.length > 0) {\r\n        return new Function(\"row\", \"id\", body).bind(filters);\r\n    }\r\n});\r\n\r\nexport const applyFilter = memoize((filter, rows) => {\r\n    return rows.filter(filter);\r\n});\r\n\r\nexport const applySort = memoize((columns, rows) => {\r\n    let column = columns.find(column => column.sort);\r\n    if (column) {\r\n        let sorting = column.sort === \"asc\" ? 1 : -1;\r\n        const field = column.field;\r\n        return [...rows].sort(function (leftRow, rightRow) {\r\n            const leftCell = leftRow[field];\r\n            const rightCell = rightRow[field];\r\n            return leftCell === rightCell ? 0 : leftCell < rightCell ? -sorting : sorting;\r\n        });\r\n    }\r\n    return rows;\r\n});\r\n\r\nconst canvas = document.createElement(\"canvas\");\r\nconst context = canvas.getContext(\"2d\");\r\n\r\ndocument.fonts.ready.then(function () {\r\n    console.log(\"fonts ready\");\r\n    context.font = window.getComputedStyle(document.body).font;\r\n});\r\n\r\nexport function textWidth(text) {\r\n    return context.measureText(text).width * 1.1;\r\n}\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\r\n *\r\n * @param text\r\n */\r\nexport function textHeight(text) {\r\n    throw \"textHeight NOT IMPLEMENTED YET\";\r\n}\r\n\r\nexport function calculateScrollbarDimensions() {\r\n    let sample = document.createElement(\"div\");\r\n    sample.style.cssText = `\r\n        width: 100vw;\r\n        height: 100vh;\r\n        overflow: scroll;\r\n        position: fixed;\r\n        visibility: hidden;\r\n\t`;\r\n    document.body.append(sample);\r\n    let dimensions = {\r\n        width: sample.offsetWidth - sample.clientWidth,\r\n        height: sample.offsetHeight - sample.clientHeight\r\n    };\r\n    sample.remove();\r\n    return dimensions;\r\n}\r\n\r\nconst REGEX_SPECIAL_CHARS = /([-*+?.^${}(|)[\\]])/g;\r\n\r\nexport function escapeRegex(str) {\r\n    return str.replace(REGEX_SPECIAL_CHARS, \"\\\\$1\");\r\n}\r\n\r\n/**\r\n *\r\n * @param {function(HTMLDivElement, SleekGrid): void} autosizeCallback\r\n * @return {function(*): void}\r\n */\r\nexport function createAutosizeHandler(autosizeCallback) {\r\n    return function autosizeHandler(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const grid = this.getRootNode().host;\r\n        if (!grid.classList.contains(\"busy\")) {\r\n            this.classList.add(\"active\");\r\n            grid.classList.add(\"busy\");\r\n            requestAnimationFrame(() => {\r\n                autosizeCallback(this.parentElement, grid);\r\n                grid.classList.remove(\"busy\");\r\n                this.classList.remove(\"active\");\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {function(*, HTMLDivElement, SleekGrid): {onEnd: *, onMove: *}} triggerHandler\r\n * @return {function(*): void}\r\n */\r\nexport function createDragHandler(triggerHandler) {\r\n\r\n    return function dragStart(triggerEvent) {\r\n        triggerEvent.preventDefault();\r\n        triggerEvent.stopPropagation();\r\n\r\n        const grid = this.getRootNode().host;\r\n        this.classList.add(\"active\");\r\n\r\n        const dragHandler = triggerHandler.call(this, triggerEvent, this.closest(\".cell\"), grid);\r\n        dragHandler.pending = 0;\r\n\r\n        document.body.addEventListener(\"pointermove\", mouseDragHandler);\r\n        document.body.addEventListener(\"pointerup\", mouseDragHandler);\r\n\r\n        const dragEnd = () => {\r\n            if (this.classList.contains(\"active\")) {\r\n                this.classList.remove(\"active\");\r\n                document.body.removeEventListener(\"pointermove\", mouseDragHandler);\r\n                document.body.removeEventListener(\"pointerup\", mouseDragHandler);\r\n                dragHandler.onEnd();\r\n            }\r\n        };\r\n\r\n        function mouseDragHandler(dragEvent) {\r\n            dragEvent.preventDefault();\r\n            dragEvent.stopPropagation();\r\n            if (dragEvent.buttons !== 1) {\r\n                requestAnimationFrame(function () {\r\n                    dragHandler.onEnd(dragEvent);\r\n                    dragEnd();\r\n                });\r\n                dragHandler.pending++;\r\n            }\r\n            if (dragHandler.pending === 0) {\r\n                requestAnimationFrame(function () {\r\n                    dragHandler.onMove(dragEvent, dragEnd);\r\n                    dragHandler.pending--;\r\n                });\r\n                dragHandler.pending++;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function useSizer(grid, sizer) {\r\n    const cell = sizer.appendChild(grid.createGridCell({\r\n        column: {},\r\n        columnIndex: 0\r\n    }, {\r\n        row: {},\r\n        rowIndex: 0\r\n    }));\r\n    cell.style.cssText = `width:auto;height:auto;`;\r\n    const cellText = cell.querySelector(\".cell-text\");\r\n    cellText.innerHTML = \"\";\r\n    return function (column, row) {\r\n        grid.renderCell(cellText, column, row);\r\n        return cell;\r\n    };\r\n}\r\n\r\nexport function parametersList(fn) {\r\n    if (fn) {\r\n        const code = fn.toString();\r\n        return code.substring(code.indexOf(\"(\"), 1 + code.lastIndexOf(\")\", code.indexOf(\"{\")));\r\n    } else {\r\n        return \"()\";\r\n    }\r\n}\r\n\r\nexport function sourceCode(fn) {\r\n    if (fn) {\r\n        const code = fn.toString();\r\n        return code.substring(code.indexOf(\"{\") + 1, code.lastIndexOf(\"}\")).trim();\r\n    } else {\r\n        return \"undefined\";\r\n    }\r\n}\r\n\r\nexport function sourceURL(path) {\r\n    return `//# sourceURL=moderno://sleekgrid/${this}/${path}`;\r\n}\r\n\r\nexport function camelCase(attributeName) {\r\n    return attributeName.replace(/(-\\w)/g, function (m) {\r\n        return m[1].toUpperCase();\r\n    });\r\n}\r\n\r\nconst opposites = {\r\n    \"top\": \"bottom\",\r\n    \"bottom\": \"top\",\r\n    \"left\": \"right\",\r\n    \"right\": \"left\"\r\n};\r\n\r\nexport function opposite(what) {\r\n    return opposites[what] ?? what;\r\n}\r\n\r\nexport function columnContext(cell) {\r\n    const area = cell.closest(\".area\");\r\n    const {columns, leftIndex, rightIndex} = area.columnCtrl;\r\n    const {columnIndex} = cell;\r\n    const column = columns[columnIndex];\r\n    return {\r\n        area,\r\n        columns,\r\n        leftIndex,\r\n        rightIndex,\r\n        column,\r\n        columnIndex\r\n    };\r\n}\r\n\r\nexport function rowContext(cell) {\r\n    const area = cell.closest(\".area\");\r\n    const {rows, topIndex, bottomIndex} = area.rowCtrl;\r\n    const {rowIndex} = cell.parentElement;\r\n    const row = rows[rowIndex];\r\n    return {\r\n        area,\r\n        rows,\r\n        topIndex,\r\n        bottomIndex,\r\n        row,\r\n        rowIndex\r\n    };\r\n}\r\n\r\nexport function limitedClientRect(target) {\r\n    const area = target.closest(\".area\");\r\n    const areaRect = area.getBoundingClientRect();\r\n    let {top, bottom, left, right} = target.getBoundingClientRect();\r\n    if (area.visibleTop !== undefined) {\r\n        top = Math.max(top, area.visibleTop);\r\n        bottom = Math.min(bottom, area.visibleBottom);\r\n    } else {\r\n        top = Math.max(top, areaRect.top);\r\n        bottom = Math.min(bottom, areaRect.bottom);\r\n    }\r\n    if (area.visibleLeft !== undefined) {\r\n        left = Math.max(left, area.visibleLeft);\r\n        right = Math.min(right, area.visibleRight);\r\n    } else {\r\n        left = Math.max(left, areaRect.left);\r\n        right = Math.min(right, areaRect.right);\r\n    }\r\n    return {top, bottom, left, right, height: bottom - top, width: right - left};\r\n}\r\n\r\nexport function assignIds(items) {\r\n    if (items[0].id === undefined) {\r\n        items.forEach((column, index) => column.id = String(index));\r\n    }\r\n    if (typeof items[0].id !== \"string\") {\r\n        items.forEach(column => column.id = String(column.id));\r\n    }\r\n}\r\n", "import {layoutColumns} from \"./column-controller.mjs\";\r\nimport {layoutRows} from \"./row-controller.mjs\";\r\nimport {sleekStyle} from \"./styles/sleek.mjs\";\r\nimport {staticStyle} from \"./styles/static.mjs\";\r\nimport {applyFilter, applySort, assignIds, createFilter, sourceURL, textWidth, useSizer} from \"./utils/index.mjs\";\r\n\r\nlet instanceId = 0;\r\n\r\nexport class SleekGrid extends HTMLElement {\r\n\r\n    #columns;\r\n    #rows;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.features = {\r\n            header: {\r\n                width: 0,\r\n                height: 0,\r\n                top: false,\r\n                right: false,\r\n                bottom: false,\r\n                left: false\r\n            },\r\n            sticky: {\r\n                top: null,\r\n                right: null,\r\n                bottom: null,\r\n                left: null\r\n            },\r\n            resize: {\r\n                columns: false,\r\n                rows: false\r\n            },\r\n            dnd: {\r\n                columns: false,\r\n                rows: false\r\n            },\r\n            autosize: \"quick\"\r\n        };\r\n\r\n        this.pendingUpdate = {};\r\n        this.properties = {\r\n            rows: [],\r\n            columns: []\r\n        };\r\n        this.#rows = this.properties.rows;\r\n        this.#columns = this.properties.columns;\r\n\r\n        const shadowRoot = this.attachShadow({mode: \"open\"});\r\n        shadowRoot.adoptedStyleSheets = [\r\n            staticStyle,\r\n            sleekStyle,\r\n            new CSSStyleSheet()\r\n        ];\r\n        shadowRoot.appendChild(this.createRoot());\r\n\r\n        this.root = shadowRoot.getElementById(\"root\");\r\n        this.viewPort = shadowRoot.getElementById(\"view-port\");\r\n\r\n        this.theme = \"light\";\r\n        this.cellSize = useSizer(this, shadowRoot.getElementById(\"sizer\"));\r\n\r\n        let af, refresh = (event) => {\r\n            cancelAnimationFrame(af);\r\n            af = requestAnimationFrame(() => {\r\n                if (Array.isArray(event)) {\r\n                    this.viewPort.refresh(this.getBoundingClientRect());\r\n                }\r\n                this.refresh();\r\n            });\r\n        };\r\n\r\n        new ResizeObserver(refresh).observe(this.viewPort);\r\n        this.viewPort.addEventListener(\"scroll\", refresh, {capture: true, passive: true});\r\n\r\n        this.window = {left: 0, top: 0, width: 0, height: 0};\r\n\r\n        this.sourceURL = sourceURL.bind(`grid-${instanceId++}`);\r\n    }\r\n\r\n    // =========================================================================================================\r\n    // MOUNT/UNMOUNT\r\n    // =========================================================================================================\r\n\r\n    static get observedAttributes() {\r\n        return [\r\n            \"theme\",\r\n            \"column-header\",\r\n            \"column-resize\",\r\n            \"column-dnd\",\r\n            \"row-header\",\r\n            \"row-resize\",\r\n            \"row-dnd\",\r\n            \"sticky-top\",\r\n            \"sticky-right\",\r\n            \"sticky-bottom\",\r\n            \"sticky-left\",\r\n            \"autosize\"\r\n        ];\r\n    }\r\n\r\n    set theme(mode) {\r\n\r\n        const {style} = this.shadowRoot.getElementById(\"root\");\r\n\r\n        if (mode === \"dark\") {\r\n            style.setProperty(\"--primary-color\", \"dodgerblue\");\r\n            style.setProperty(\"--text-color\", \"white\");\r\n            style.setProperty(\"--background-color\", \"#444\");\r\n            style.setProperty(\"--even-rows-background\", \"#222\");\r\n            style.setProperty(\"--odd-rows-background\", \"#111\");\r\n            style.setProperty(\"--border-color\", \"#333\");\r\n            style.setProperty(\"--shadow-color\", \"rgba(0, 0, 0, 1)\");\r\n            style.setProperty(\"--border-color-active\", \"white\");\r\n        } else {\r\n            style.setProperty(\"--primary-color\", \"dodgerblue\");\r\n            style.setProperty(\"--text-color\", \"black\");\r\n            style.setProperty(\"--background-color\", \"white\");\r\n            style.setProperty(\"--even-rows-background\", \"white\");\r\n            style.setProperty(\"--odd-rows-background\", \"#eee\");\r\n            style.setProperty(\"--border-color\", \"lightgrey\");\r\n            style.setProperty(\"--shadow-color\", \"rgba(0, 0, 0, 0.25)\");\r\n            style.setProperty(\"--border-color-active\", \"black\");\r\n        }\r\n    }\r\n\r\n    // =========================================================================================================\r\n    // ATTRIBUTES & PROPERTIES\r\n    // =========================================================================================================\r\n\r\n    get columns() {\r\n        return this.#columns;\r\n    }\r\n\r\n    set columns(columns) {\r\n        if (Array.isArray(columns) && columns.length) {\r\n            if (typeof columns[0] === \"string\") {\r\n                columns = columns.map((label, index) => ({id: String(index), label, field: index}));\r\n            }\r\n            assignIds(columns);\r\n        }\r\n        this.requestUpdate({columns: columns ?? []});\r\n    }\r\n\r\n    get rows() {\r\n        return this.#rows;\r\n    }\r\n\r\n    set rows(rows) {\r\n        if (Array.isArray(rows) && rows.length) {\r\n            assignIds(rows);\r\n        }\r\n        this.requestUpdate({rows: rows ?? []});\r\n    }\r\n\r\n    connectedCallback() {\r\n\r\n        this.setAttribute(\"grid-id\", this.gridId);\r\n\r\n        this.useHighlight();\r\n\r\n        this.update(this.pendingUpdate);\r\n        this.pendingUpdate = null;\r\n\r\n        const {width, height} = this.viewPort.getBoundingClientRect();\r\n        this.window.left = this.viewPort.scrollLeft;\r\n        this.window.top = this.viewPort.scrollTop;\r\n        this.window.width = width;\r\n        this.window.height = height;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n    }\r\n\r\n    attributeChangedCallback(name, old, value) {\r\n        switch (name) {\r\n            case \"theme\": {\r\n                return this.theme = value;\r\n            }\r\n            case \"column-header\": {\r\n                const {header} = this.features;\r\n                header.top = header.bottom = false;\r\n                if (value) {\r\n                    const position = !/bottom/i.test(value) ? \"top\" : \"bottom\";\r\n                    header[position] = true;\r\n                }\r\n                this.requestUpdate({features: {...this.features, header}});\r\n                return;\r\n            }\r\n            case \"row-header\": {\r\n                const {header} = this.features;\r\n                header.left = header.right = false;\r\n                if (value) {\r\n                    const position = !/right/i.test(value) ? \"left\" : \"right\";\r\n                    header[position] = true;\r\n                }\r\n                this.requestUpdate({features: {...this.features, header}});\r\n                return;\r\n            }\r\n            case \"sticky-top\":\r\n            case \"sticky-right\":\r\n            case \"sticky-bottom\":\r\n            case \"sticky-left\": {\r\n                const {sticky} = this.features;\r\n                const position = name.split(\"-\")[1];\r\n                if (value) {\r\n                    const items = sticky[position] = {};\r\n                    for (const id of value.split(\",\")) {\r\n                        items[id] = true;\r\n                    }\r\n                } else {\r\n                    sticky[position] = null;\r\n                }\r\n                this.requestUpdate({features: {...this.features, sticky}});\r\n                return;\r\n            }\r\n            case \"column-resize\": {\r\n                const {resize} = this.features;\r\n                resize.columns = !(value === null || value === \"false\");\r\n                this.requestUpdate({features: {...this.features, resize}});\r\n                return;\r\n            }\r\n            case \"row-resize\": {\r\n                const {resize} = this.features;\r\n                resize.rows = !(value === null || value === \"false\");\r\n                this.requestUpdate({features: {...this.features, resize}});\r\n                return;\r\n            }\r\n            case \"column-dnd\": {\r\n                const {dnd} = this.features;\r\n                dnd.columns = !(value === null || value === \"false\");\r\n                this.requestUpdate({features: {...this.features, dnd}});\r\n                return;\r\n            }\r\n            case \"row-dnd\": {\r\n                const {dnd} = this.features;\r\n                dnd.rows = !(value === null || value === \"false\");\r\n                this.requestUpdate({features: {...this.features, dnd}});\r\n                return;\r\n            }\r\n            case \"autosize\": {\r\n                const autosize = !(value === null || value === \"false\");\r\n                this.requestUpdate({features: {...this.features, autosize}});\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    requestUpdate(changed = this.properties) {\r\n        if (!this.pendingUpdate) {\r\n            this.pendingUpdate = Object.create(null);\r\n            if (this.shadowRoot) setTimeout(() => {\r\n                this.update(this.pendingUpdate);\r\n                this.pendingUpdate = null;\r\n            }, 0);\r\n        }\r\n        Object.assign(this.pendingUpdate, changed);\r\n    }\r\n\r\n    update(changed = this.properties) {\r\n        Object.assign(this.properties, changed);\r\n        const properties = Object.assign(Object.create(this.properties), changed);\r\n        this.filter(properties);\r\n        this.sort(properties);\r\n        this.layout(properties);\r\n        this.render(properties);\r\n    }\r\n\r\n    // =========================================================================================================\r\n    // RENDERING\r\n    // =========================================================================================================\r\n\r\n    filter(properties) {\r\n        let {columns, rows} = properties;\r\n        if (columns || rows) {\r\n            columns = columns ?? this.#columns;\r\n            rows = rows ?? this.#rows;\r\n            const filter = createFilter(this, columns);\r\n            if (filter) {\r\n                rows = applyFilter(filter, rows);\r\n                if (rows !== this.#rows) {\r\n                    if (filter && rows.length === 0) {\r\n                        rows = [columns.reduce(function (row, column) {\r\n                            if (column.search) {\r\n                                row[column.field] = \"NO MATCH\";\r\n                            }\r\n                            row.id = \"\";\r\n                            return row;\r\n                        }, {})];\r\n                    }\r\n                    properties.rows = rows;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    sort(properties) {\r\n        let {columns, rows} = properties;\r\n        if (columns || rows) {\r\n            rows = applySort(columns ?? this.#columns, rows ?? this.#rows);\r\n            if (rows !== this.#rows) {\r\n                properties.rows = rows;\r\n            }\r\n        }\r\n    }\r\n\r\n    layout(properties) {\r\n        let {action, columns, rows, features} = properties;\r\n\r\n        const rect = this.viewPort.getBoundingClientRect();\r\n\r\n        if (features) {\r\n            if (features.sticky || features.header) {\r\n                columns = columns ?? this.#columns;\r\n                rows = rows ?? this.#rows;\r\n                this.viewPort.layout();\r\n            }\r\n            this.features = features;\r\n        }\r\n\r\n        let {\r\n            top, right, bottom, left, center,\r\n            scrollTop, clientHeight,\r\n            scrollLeft, clientWidth\r\n        } = this.viewPort;\r\n\r\n        // =============================================================================================================\r\n        // FROM THIS POINT on DON'T access the DOM for READING (e.g. viewWidth)...\r\n        // =============================================================================================================\r\n\r\n        if (columns) {\r\n            if (!action) this.autosizeColumns(columns, rows ?? this.#rows, clientWidth);\r\n\r\n            const slices = this.sliceColumns(columns);\r\n\r\n            if (left) {\r\n                const slice = slices.left;\r\n                left.width = layoutColumns(slice);\r\n                left.columnCtrl.layout(slice);\r\n                left.columns = slice;\r\n                if (top) {\r\n                    top.left.columns = slice;\r\n                }\r\n                if (bottom) {\r\n                    bottom.left.columns = slice;\r\n                }\r\n                clientWidth -= left.width;\r\n            }\r\n\r\n            if (right) {\r\n                const slice = slices.right;\r\n                right.width = layoutColumns(slice);\r\n                right.columnCtrl.layout(slice);\r\n                right.columns = slice;\r\n                if (top) {\r\n                    top.right.columns = slice;\r\n                }\r\n                if (bottom) {\r\n                    bottom.right.columns = slice;\r\n                }\r\n                clientWidth -= right.width;\r\n            }\r\n\r\n            const slice = slices.center;\r\n            center.width = Math.max(layoutColumns(slice), clientWidth - ((left?.width ?? 8) + (right?.width ?? 8)));\r\n            center.columnCtrl.layout(slice, scrollLeft, clientWidth);\r\n\r\n            center.columns = slice;\r\n            if (top) top.columns = slice;\r\n            if (bottom) bottom.columns = slice;\r\n\r\n            this.#columns = columns;\r\n            this.window.width = clientWidth;\r\n        }\r\n\r\n        if (rows) {\r\n            if (!action) this.autosizeRows(rows, clientHeight);\r\n\r\n            const slices = this.sliceRows(rows);\r\n\r\n            if (top) {\r\n                const slice = slices.top;\r\n                top.height = layoutRows(slice);\r\n                top.rowCtrl.layout(slice);\r\n                top.rows = slice;\r\n                if (left) {\r\n                    top.left.rows = slice;\r\n                }\r\n                if (right) {\r\n                    top.right.rows = slice;\r\n                }\r\n                clientHeight -= top.height;\r\n            }\r\n\r\n            if (bottom) {\r\n                const slice = slices.bottom;\r\n                bottom.height = layoutRows(slice);\r\n                bottom.rowCtrl.layout(slice);\r\n                bottom.rows = slice;\r\n                if (left) {\r\n                    bottom.left.rows = slice;\r\n                }\r\n                if (right) {\r\n                    bottom.right.rows = slice;\r\n                }\r\n                clientHeight -= bottom.height;\r\n            }\r\n\r\n            const slice = slices.center;\r\n            center.height = Math.max(layoutRows(slice), clientHeight - ((top?.height ?? 8) + (bottom?.height ?? 8)));\r\n            center.rowCtrl.layout(slice, scrollTop, clientHeight);\r\n\r\n            center.rows = slice;\r\n            if (left) left.rows = slice;\r\n            if (right) right.rows = slice;\r\n\r\n            this.#rows = rows;\r\n            this.window.height = clientHeight;\r\n        }\r\n\r\n        this.window.left = scrollLeft;\r\n        this.window.top = scrollTop;\r\n\r\n        this.viewPort.refresh(rect);\r\n    }\r\n\r\n    render({columns, rows}) { // TODO : maybe further optimization\r\n\r\n        const {top, right, bottom, left, center} = this.viewPort;\r\n\r\n        const {rowCtrl, columnCtrl} = center;\r\n        rowCtrl.update(center, columnCtrl);\r\n        if (top) {\r\n            top.rowCtrl.update(top, columnCtrl);\r\n        }\r\n        if (bottom) {\r\n            bottom.rowCtrl.update(bottom, columnCtrl);\r\n        }\r\n        if (left) {\r\n            rowCtrl.update(left, left.columnCtrl);\r\n            if (top) {\r\n                top.rowCtrl.update(top.left, left.columnCtrl);\r\n            }\r\n            if (bottom) {\r\n                bottom.rowCtrl.update(bottom.left, left.columnCtrl);\r\n            }\r\n        }\r\n        if (right) {\r\n            rowCtrl.update(right, right.columnCtrl);\r\n            if (top) {\r\n                top.rowCtrl.update(top.right, right.columnCtrl);\r\n            }\r\n            if (bottom) {\r\n                bottom.rowCtrl.update(bottom.right, right.columnCtrl);\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollTo(x, y) {\r\n        this.viewPort.scrollTo(x, y);\r\n    }\r\n\r\n    refresh() {\r\n        let {\r\n            top, right, bottom, left, center,\r\n            scrollTop, scrollLeft,\r\n            clientHeight, clientWidth\r\n        } = this.viewPort;\r\n\r\n        this.window.left = scrollLeft;\r\n        this.window.top = scrollTop;\r\n\r\n        if (top) {\r\n            clientHeight -= top.height;\r\n        }\r\n        if (right) {\r\n            clientWidth -= right.width;\r\n        }\r\n        if (bottom) {\r\n            clientHeight -= bottom.height;\r\n        }\r\n        if (left) {\r\n            clientWidth -= left.width;\r\n        }\r\n\r\n        this.window.width = clientWidth;\r\n        this.window.height = clientHeight;\r\n\r\n        const {rowCtrl, columnCtrl} = center;\r\n\r\n        columnCtrl.sync(scrollLeft, clientWidth);\r\n        rowCtrl.sync(scrollTop, clientHeight);\r\n\r\n        if (columnCtrl.refresh) {\r\n            if (top) {\r\n                top.rowCtrl.refresh(top, columnCtrl);\r\n            }\r\n            if (bottom) {\r\n                bottom.rowCtrl.refresh(bottom, columnCtrl);\r\n            }\r\n        }\r\n        if (left) {\r\n            rowCtrl.refresh(left, left.columnCtrl);\r\n        }\r\n        rowCtrl.refresh(center, columnCtrl);\r\n        if (right) {\r\n            rowCtrl.refresh(right, right.columnCtrl);\r\n        }\r\n\r\n        this.pending = null;\r\n    }\r\n\r\n    // =========================================================================================================\r\n    // Grid API\r\n    // =========================================================================================================\r\n\r\n    autosizeColumns(columns, rows = this.#rows, maxWidth) {\r\n        const autosize = this.features.autosize;\r\n        if (autosize === \"quick\") {\r\n            for (let c = 0; c < columns.length; c++) {\r\n                const {field, label} = columns[c];\r\n                let width = textWidth(label);\r\n                for (let r = 0; r < rows.length; r++) {\r\n                    width = Math.max(width, textWidth(rows[r][field]));\r\n                }\r\n                columns[c].width = this.limit(\"column-width\", width + 18);\r\n            }\r\n        } else if (autosize === true) {\r\n\r\n        } else {\r\n            for (let c = 0; c < columns.length; c++) {\r\n                columns[c].width = this.limit(\"column-width\", textWidth(columns[c].label) + 18);\r\n            }\r\n        }\r\n    }\r\n\r\n    autoColumnWidth(column, rows = this.#rows) {\r\n        let width = textWidth(column.label);\r\n        for (const row of rows) {\r\n            width = Math.max(width, this.cellSize(column, row).clientWidth);\r\n        }\r\n        return this.limit(\"column-width\", width + 18);\r\n    }\r\n\r\n    autosizeRows(rows, maxHeight) {\r\n        const autosize = this.features.autosize;\r\n        for (let row, r = 0; r < rows.length; r++) {\r\n            row = rows[r];\r\n            row.height = this.limit(\"row-height\", 32);\r\n        }\r\n    }\r\n\r\n    autoRowHeight(row, columns = this.#columns) {\r\n        let height = 0;\r\n        for (const column of columns) {\r\n            height = Math.max(height, this.cellSize(column, row).clientHeight);\r\n        }\r\n        return height;\r\n    }\r\n\r\n    limit(dimension, value) {\r\n        let min = this.getAttribute(`min-${dimension}`);\r\n        if (min !== null) {\r\n            value = Math.max(value, parseInt(min));\r\n        }\r\n        let max = this.getAttribute(`max-${dimension}`);\r\n        if (max !== null) {\r\n            value = Math.min(value, parseInt(max));\r\n        }\r\n        return value;\r\n    }\r\n\r\n    renderCell(cell, column, row) {\r\n        cell.innerText = row[column.field] ?? \"\";\r\n    }\r\n\r\n    setHeaderWidth(width) {\r\n        this.features.header.width = width;\r\n        this.style.setProperty(\"--header-width\", `${width}px`);\r\n    };\r\n\r\n    setHeaderHeight(height) {\r\n        this.features.header.height = height;\r\n        this.style.setProperty(\"--header-height\", `${height}px`);\r\n        const padding = Math.min(8, Math.max(2, 2 + (height - 32) * 6 / 10));\r\n        this.style.setProperty(\"--search-input-padding\", `${padding}px`);\r\n    };\r\n\r\n    sliceColumns(columns) {\r\n        const {header, sticky} = this.features;\r\n        const stickyLeft = sticky?.left ?? {};\r\n        const stickyRight = sticky?.right ?? {};\r\n\r\n        const center = [];\r\n        const left = header?.left ? [{id: \"header\", field: \"id\", width: 50, position: \"left\"}] : [];\r\n        const right = [];\r\n\r\n        for (let column, c = 0; c < columns.length; c++) {\r\n            column = {...columns[c]};\r\n            if (stickyLeft[column.id]) {\r\n                left.push(column);\r\n                continue;\r\n            }\r\n            if (stickyRight[column.id]) {\r\n                right.push(column);\r\n                continue;\r\n            }\r\n            center.push(column);\r\n        }\r\n\r\n        if (header.right) right.push({id: \"header\", field: \"label\", width: 50, position: \"right\"});\r\n\r\n        return {center, left, right};\r\n    }\r\n\r\n    sliceRows(rows) {\r\n        const {header, sticky} = this.features;\r\n        const stickyTop = sticky?.top ?? {};\r\n        const stickyBottom = sticky?.bottom ?? {};\r\n\r\n        const center = [];\r\n        const top = header.top ? [{id: \"header\", field: \"label\", height: 32, position: \"top\"}] : [];\r\n        const bottom = [];\r\n\r\n        for (let row, r = 0; r < rows.length; r++) {\r\n            row = {...rows[r]};\r\n            if (stickyTop[row.id]) {\r\n                top.push(row);\r\n                continue;\r\n            }\r\n            if (stickyBottom[row.id]) {\r\n                bottom.push(row);\r\n                continue;\r\n            }\r\n            center.push(row);\r\n        }\r\n\r\n        if (header.bottom) bottom.push({id: \"header\", field: \"id\", height: 32, position: \"bottom\"});\r\n\r\n        return {center, top, bottom};\r\n    }\r\n\r\n}\r\n\r\n", "import {SleekGrid} from \"../sleek-grid.mjs\";\r\nimport {useTemplate} from \"../utils/index.mjs\";\r\n\r\nconst cloneArea = useTemplate(`\r\n    <div class=\"area\">\r\n        <!--highlight-->\r\n    </div>\r\n`);\r\n\r\n/**\r\n *\r\n * @type {HTMLDivElement & {columnCtrl?:ColumnController,rowCtrl?:RowController}}\r\n */\r\nSleekGrid.prototype.createArea = function createGridArea(position) {\r\n\r\n    const area = cloneArea();\r\n    area.id = `${position}-area`;\r\n    area.setAttribute(\"tabindex\", String(tabIndex(position)));\r\n\r\n    const [primary, secondary] = position.split(\"-\");\r\n    if (primary) area.classList.add(`${primary}-area`);\r\n    if (secondary) area.classList.add(`${secondary}-area`);\r\n\r\n    area.addEventListener(\"keydown\", function (event) {\r\n        const highlight = area.querySelector(\"#highlight\");\r\n        if (highlight) {\r\n            switch (event.code) {\r\n                case \"KeyS\":\r\n                case \"ArrowDown\":\r\n                    return moveHighlight(event, highlight, 0, 1);\r\n                case \"KeyW\":\r\n                case \"ArrowUp\":\r\n                    return moveHighlight(event, highlight, 0, -1);\r\n                case \"KeyA\":\r\n                case \"ArrowLeft\":\r\n                    return moveHighlight(event, highlight, -1, 0);\r\n                case \"KeyD\":\r\n                case \"ArrowRight\":\r\n                    return moveHighlight(event, highlight, 1, 0);\r\n            }\r\n        }\r\n    });\r\n\r\n    return area;\r\n};\r\n\r\nfunction moveHighlight(event, highlight, hz, vt) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    highlight.move(hz, vt);\r\n}\r\n\r\nfunction tabIndex(position) {\r\n    switch (position) {\r\n        case \"top-left\":\r\n            return 1;\r\n        case \"top\":\r\n            return 2;\r\n        case \"top-right\":\r\n            return 3;\r\n        case \"left\":\r\n            return 4;\r\n        case \"center\":\r\n            return 5;\r\n        case \"right\":\r\n            return 6;\r\n        case \"bottom-left\":\r\n            return 7;\r\n        case \"bottom\":\r\n            return 8;\r\n        case \"bottom-right\":\r\n            return 9;\r\n    }\r\n}\r\n\r\nexport function defineStyleVariable(node, name) {\r\n    const {style} = node.closest(\"#view-port\");\r\n    let variableValue;\r\n    Object.defineProperty(node, name, {\r\n        get: () => variableValue,\r\n        set: value => style.setProperty(`--${node.id}-${name}`, `${variableValue = value}px`)\r\n    });\r\n}\r\n\r\nexport function linkStyleVariable(node, target, name) {\r\n    Object.defineProperty(node, name, Object.getOwnPropertyDescriptor(target, name));\r\n}\r\n", "import {createAutosizeHandler, createDragHandler, rowContext} from \"../utils/index.mjs\";\r\n\r\nfunction dispatchResizeAction(grid, id, rowHeight) {\r\n    const {rows} = grid.properties;\r\n    rows[rows.findIndex(row => row.id === id)].height = rowHeight;\r\n}\r\n\r\nexport const autosizeHeightHandler = createAutosizeHandler((cell, grid) => {\r\n    const {\r\n        area,\r\n        rows,\r\n        rowIndex,\r\n        row\r\n    } = rowContext(cell);\r\n\r\n    const translation = Math.round(grid.autoRowHeight(row) - row.height);\r\n    if (translation) {\r\n        row.height += translation;\r\n        area.height += translation;\r\n        grid.resizeRowParts(row.id, row.height);\r\n        for (let row, nextIndex = rowIndex + 1; nextIndex < rows.length; nextIndex++) {\r\n            row = rows[nextIndex];\r\n            grid.positionRowParts(row.id, row.top += translation);\r\n        }\r\n        dispatchResizeAction(grid, row.id, row.height);\r\n    }\r\n\r\n});\r\n\r\nexport const dragHeightHandler = createDragHandler(function ({pageY: lastY}, cell, grid) {\r\n    const {\r\n        area,\r\n        rows,\r\n        rowIndex,\r\n        row\r\n    } = rowContext(cell);\r\n\r\n    let translation = 0;\r\n    return {\r\n        onMove({pageY}, stop) {\r\n            let height = row.height + pageY - lastY;\r\n            if (row.maxHeight !== undefined) {\r\n                height = Math.min(height, row.maxHeight);\r\n            }\r\n            if (row.minHeight !== undefined) {\r\n                height = Math.max(height, row.minHeight);\r\n            } else {\r\n                height = Math.max(height, 32);\r\n            }\r\n            translation = Math.round(height - row.height);\r\n            if (translation) {\r\n                grid.resizeRowParts(row.id, row.height += translation);\r\n                area.height += translation;\r\n                for (let row, nextIndex = rowIndex + 1; nextIndex < rows.length; nextIndex++) {\r\n                    row = rows[nextIndex];\r\n                    grid.positionRowParts(row.id, row.top += translation);\r\n                }\r\n            }\r\n            lastY = pageY;\r\n            grid.refresh();\r\n        },\r\n        onEnd() {\r\n            dispatchResizeAction(grid, row.id, row.height);\r\n        }\r\n    };\r\n});\r\n\r\n", "import {createDragHandler, limitedClientRect, rowContext} from \"../utils/index.mjs\";\r\n\r\n/**\r\n *\r\n * @param {SleekGrid} grid\r\n * @param dragId\r\n * @param top\r\n * @param left\r\n * @param height\r\n * @return {{move(*, *): void, dispose(): void}}\r\n */\r\nfunction createGhostRow(grid, {row, rowIndex}, {top, left, height}) {\r\n    const {clientWidth} = grid.viewPort;\r\n\r\n    const ghost = grid.root.appendChild(document.createElement(\"div\"));\r\n    ghost.className = `ghost row ${rowIndex % 2 ? \"odd\" : \"even\"}`;\r\n    ghost.style.cssText = `\r\n        left:${left + 4}px;\r\n        top:${top + 2}px;\r\n        height:${height - 4}px;\r\n        width:${clientWidth - 8}px;\r\n    `;\r\n\r\n    for (const cell of grid.queryRowCells(row.id)) {\r\n        const clone = cell.cloneNode(true);\r\n        clone.style.left = null;\r\n        ghost.appendChild(clone);\r\n    }\r\n\r\n    requestAnimationFrame(function () {\r\n        ghost.style.opacity = \"1\";\r\n    });\r\n\r\n    return {\r\n        move(x, y) {\r\n            ghost.style.transform = `translate(${x}px, ${y}px)`;\r\n        },\r\n        dispose() {\r\n            ghost.style.opacity = null;\r\n            setTimeout(function () {\r\n                ghost.remove();\r\n            }, 300);\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {SleekGrid} grid\r\n * @param rows\r\n * @param rowIndex\r\n * @param dragCell\r\n * @param initialY\r\n * @return {{dispose(): void, done, on(*=, *=): void}}\r\n */\r\nfunction createRowShifter(grid, {rows, rowIndex}, dragCell, initialY) {\r\n\r\n    function packTop(dragIndex, dropIndex) {\r\n        const swap = rows[dragIndex];\r\n        let row, top = swap.top;\r\n        for (let rowIndex = dragIndex; rowIndex < dropIndex; rowIndex++) {\r\n            row = rows[rowIndex] = rows[rowIndex + 1];\r\n            for (const rowPart of grid.positionRowParts(row.id, row.top = top)) {\r\n                rowPart.rowIndex = rowIndex;\r\n            }\r\n            top += row.height;\r\n        }\r\n        row = rows[dropIndex] = swap;\r\n        for (const rowPart of grid.positionRowParts(row.id, row.top = top)) {\r\n            rowPart.rowIndex = dropIndex;\r\n        }\r\n    }\r\n\r\n    function packBottom(dropIndex, dragIndex) {\r\n        let swap = rows[dragIndex];\r\n        let row, top = rows[dropIndex].top;\r\n        for (let rowIndex = dropIndex; rowIndex < dragIndex; rowIndex++) {\r\n            row = swap;\r\n            swap = rows[rowIndex];\r\n            rows[rowIndex] = row;\r\n            for (const rowPart of grid.positionRowParts(row.id, row.top = top)) {\r\n                rowPart.rowIndex = rowIndex;\r\n            }\r\n            top += row.height;\r\n        }\r\n        row = rows[dragIndex] = swap;\r\n        for (const rowPart of grid.positionRowParts(row.id, row.top = top)) {\r\n            rowPart.rowIndex = dropIndex;\r\n        }\r\n    }\r\n\r\n    const dragOffset = centerY(dragCell) - initialY;\r\n    let dropIndex, dragIndex = rowIndex;\r\n\r\n    let lastY = initialY, delta = pageY => {\r\n        const delta = pageY - lastY;\r\n        lastY = pageY;\r\n        return delta;\r\n    };\r\n\r\n    let transitioning = false;\r\n    let ontransitionend = () => {\r\n        transitioning = false;\r\n    };\r\n\r\n    return {\r\n        set done(callback) {\r\n            ontransitionend = () => {\r\n                callback();\r\n                transitioning = false;\r\n            };\r\n        },\r\n\r\n        on(pageY, targetCell) {\r\n            const deltaY = delta(pageY);\r\n            const dragY = pageY + dragOffset;\r\n\r\n            if (!transitioning) {\r\n                dropIndex = targetCell.parentElement.rowIndex;\r\n\r\n                if (deltaY > 0 && dropIndex > dragIndex) {\r\n                    const dropY = centerY(targetCell);\r\n                    if (dragY > dropY - 8) {\r\n                        packTop(dragIndex, dropIndex);\r\n                        dragIndex = dropIndex;\r\n                        dragCell.parentElement.addEventListener(\"transitionend\", ontransitionend);\r\n                        transitioning = true;\r\n                    }\r\n                }\r\n\r\n                if (deltaY < 0 && dropIndex < dragIndex) {\r\n                    const dropY = centerY(targetCell);\r\n                    if (dropY < dragY + 8) {\r\n                        packBottom(dropIndex, dragIndex);\r\n                        dragIndex = dropIndex;\r\n                        dragCell.parentElement.addEventListener(\"transitionend\", ontransitionend);\r\n                        transitioning = true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        dispose() {\r\n            if (dropIndex) {\r\n                const sorted = [...grid.properties.rows];\r\n                const fromId = rows[dragIndex].id;\r\n                const toId = rows[dragIndex + 1].id;\r\n                const fromIndex = sorted.findIndex(({id}) => id === fromId);\r\n                const [dragged] = sorted.splice(fromIndex, 1);\r\n                const toIndex = sorted.findIndex(({id}) => id === toId);\r\n                sorted.splice(toIndex, 0, dragged);\r\n                grid.requestUpdate({rows: sorted});\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction centerY(target) {\r\n    const {top, bottom} = target.getBoundingClientRect();\r\n    return (top + bottom) / 2;\r\n}\r\n\r\n/**\r\n *\r\n * @param {SleekGrid} grid\r\n * @param columns\r\n * @param initialLeft\r\n * @param initialRight\r\n * @return {{at(*=): void, dispose(): void}}\r\n */\r\nfunction createDropHighlight(grid, {rows}, {top: initialTop, bottom: initialBottom}) {\r\n\r\n    const dropHighlight = grid.shadowRoot.appendChild(document.createElement(\"div\"));\r\n    dropHighlight.id = \"drop-highlight\";\r\n\r\n    const {left, right, bottom: maxBottom} = grid.viewPort.getBoundingClientRect();\r\n    dropHighlight.style.cssText = `\r\n        left:${left}px;\r\n        top:${initialTop}px;\r\n        width:${right - left}px;\r\n        height:${Math.min(initialBottom, maxBottom) - initialTop - 2}px;\r\n        transform: translateY(0);\r\n    `;\r\n\r\n    let current;\r\n\r\n    return {\r\n        at(target, force) {\r\n            if (force || target !== current) {\r\n                const {top, bottom} = limitedClientRect(target);\r\n                dropHighlight.style.transform = `translateY(${top - initialTop + 1}px)`;\r\n                dropHighlight.style.height = `${bottom - top - 2}px`;\r\n                current = target;\r\n            }\r\n        },\r\n        dispose() {\r\n            dropHighlight.remove();\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Drag'n Drop Row Handler\r\n *\r\n * @type {function(*): void}\r\n */\r\nexport const dragndropRowHandler = createDragHandler(function ({pageX: initialX, pageY: initialY}, cell, grid) {\r\n    const ctx = rowContext(cell);\r\n    const {row} = ctx;\r\n    const cellRect = limitedClientRect(cell);\r\n\r\n    const ghost = createGhostRow(grid, ctx, cellRect);\r\n    const shifter = createRowShifter(grid, ctx, cell, initialX);\r\n    const highlight = createDropHighlight(grid, ctx, cellRect);\r\n\r\n    shifter.done = () => {\r\n        // grid.viewPort.scrollLeft += 100;\r\n        highlight.at(cell, true);\r\n    };\r\n\r\n    grid.viewPort.classList.add(\"drag-n-drop\", \"drag-row\");\r\n    grid.queryRowParts(row.id).forEach(rowPart => rowPart.classList.add(\"detached\"));\r\n\r\n    const {left: minX, right: maxX} = grid.viewPort.getBoundingClientRect();\r\n\r\n    const cellArea = cell.closest(\".area\");\r\n    let targetArea = cellArea;\r\n\r\n    return {\r\n        onMove({pageX, pageY}) {\r\n            let offsetX = Math.min(maxX, Math.max(minX, pageX)) - initialX;\r\n            let offsetY = pageY - initialY;\r\n            ghost.move(offsetX, offsetY);\r\n\r\n            const targetCell = grid.shadowRoot.elementFromPoint(pageX, pageY);\r\n            if (targetCell.classList.contains(\"header\")) {\r\n                targetArea = targetCell.closest(\".area\");\r\n                if (targetArea === cellArea) {\r\n                    highlight.at(cell);\r\n                    shifter.on(pageY, targetCell);\r\n                } else {\r\n                    highlight.at(targetArea);\r\n                }\r\n            }\r\n        },\r\n        onEnd() {\r\n            ghost.dispose();\r\n            highlight.dispose();\r\n            shifter.dispose();\r\n\r\n            if (targetArea !== cellArea) {\r\n                const {sticky} = grid.features;\r\n                const classList = targetArea.classList;\r\n                if (classList.contains(\"top-area\")) {\r\n                    sticky.top = {...sticky.top, [row.id]: true};\r\n                } else if (classList.contains(\"bottom-area\")) {\r\n                    sticky.bottom = {...sticky.bottom, [row.id]: true};\r\n                }\r\n                grid.requestUpdate({features: {...grid.features, sticky}});\r\n            }\r\n\r\n            grid.viewPort.classList.remove(\"drag-n-drop\", \"drag-row\");\r\n            grid.queryRowParts(row.id).forEach(rowPart => rowPart.classList.remove(\"detached\"));\r\n        }\r\n    };\r\n});\r\n", "import {autosizeHeightHandler, dragHeightHandler} from \"../features/row-resize.mjs\";\r\nimport {SleekGrid} from \"../sleek-grid.mjs\";\r\nimport {useTemplate} from \"../utils/index.mjs\";\r\nimport {dragndropRowHandler} from \"../features/row-dnd.mjs\";\r\n\r\nSleekGrid.prototype.createGridRow = useTemplate(`\r\n    <div class=\"row r-undefined\" tabindex=\"-1\"></div>\r\n`);\r\n\r\nSleekGrid.prototype.updateGridRow = function updateGridRow(node, {row, rowIndex}) {\r\n    if (node.row !== row) {\r\n        node.setAttribute(\"row-id\", row.id);\r\n        node.style.transform = `translateY(${(row.top)}px)`;\r\n        node.style.height = `${(row.height)}px`;\r\n        node.row = row;\r\n    }\r\n    if (node.rowIndex !== rowIndex) {\r\n        node.classList.replace(node.classList[1], `r-${rowIndex}`);\r\n        if (rowIndex % 2) {\r\n            node.className = `row odd r-${rowIndex}`;\r\n        } else {\r\n            node.className = `row even r-${rowIndex}`;\r\n        }\r\n        node.rowIndex = rowIndex;\r\n    }\r\n};\r\n\r\n\r\nSleekGrid.prototype.createGridCell = useTemplate(`\r\n    <div class=\"cell c-undefined\">\r\n        <div class=\"cell-text\"></div>\r\n    </div>\r\n`);\r\n\r\nSleekGrid.prototype.updateGridCell = function updateGridCell(node, {column, columnIndex}, {row}) {\r\n    if (node.columnIndex !== columnIndex) {\r\n        node.classList.replace(node.classList[1], `c-${columnIndex}`);\r\n        node.columnIndex = columnIndex;\r\n    }\r\n    if (node.column !== column) {\r\n        node.setAttribute(\"column-id\", column.id);\r\n        node.style.left = `${(column.left)}px`;\r\n        node.style.width = `${(column.width)}px`;\r\n        node.column = column;\r\n    }\r\n    this.renderCell(node.firstChild, column, row);\r\n};\r\n\r\n\r\nSleekGrid.prototype.createRowHeader = useTemplate(`\r\n    <div class=\"undefined header cell c-undefined\" tabindex=\"-1\">\r\n        <div class=\"cell-text\"></div>\r\n        <div class=\"handle height-handle\"></div>\r\n    </div>\r\n`, function (cell) {\r\n\r\n    const {firstChild: label, lastChild: handle} = cell;\r\n\r\n    if (this.features.resize.columns) {\r\n        handle.addEventListener(\"dblclick\", autosizeHeightHandler);\r\n        handle.addEventListener(\"pointerdown\", dragHeightHandler);\r\n    }\r\n    if (this.features.dnd.rows) {\r\n        label.addEventListener(\"pointerdown\", dragndropRowHandler);\r\n    }\r\n});\r\n\r\nSleekGrid.prototype.updateRowHeader = function updateRowHeader(node, {column, columnIndex}, {row}) {\r\n    if (node.columnIndex !== columnIndex) {\r\n        node.classList.replace(node.classList[3], `c-${columnIndex}`);\r\n        node.columnIndex = columnIndex;\r\n    }\r\n    if (node.column !== column) {\r\n        node.setAttribute(\"column-id\", column.id);\r\n        node.classList.replace(node.classList[0], column.position);\r\n        node.style.left = `${(column.left)}px`;\r\n        node.style.width = `${(column.width)}px`;\r\n        node.column = column;\r\n    }\r\n    node.firstChild.innerText = row[column.field];\r\n};\r\n\r\n\r\n", "import {columnContext, createDragHandler, limitedClientRect} from \"../utils/index.mjs\";\r\n\r\n/**\r\n *\r\n * @param {SleekGrid} grid\r\n * @param dragId\r\n * @param top\r\n * @param left\r\n * @param width\r\n * @return {{move(*, *): void, dispose(): void}}\r\n */\r\nfunction createGhostColumn(grid, {column}, {top, left, width}) {\r\n    const {clientHeight} = grid.viewPort;\r\n\r\n    const ghost = grid.root.appendChild(document.createElement(\"div\"));\r\n    ghost.className = \"ghost column\";\r\n    ghost.style.cssText = `\r\n        left:${left + 4}px;\r\n        top:${top + 2}px;\r\n        width:${width - 8}px;\r\n        height:${clientHeight - 4}px;\r\n    `;\r\n\r\n    for (const cell of grid.queryColumnCells(column.id)) {\r\n        const clone = cell.cloneNode(true);\r\n        clone.style.left = \"0\";\r\n        clone.style.transform = cell.parentElement.transform;\r\n        clone.classList.add(cell.parentElement.classList.contains(\"odd\") ? \"odd\" : \"even\");\r\n        ghost.appendChild(clone);\r\n    }\r\n    ghost.firstElementChild.classList.remove(\"odd\", \"even\");\r\n\r\n    requestAnimationFrame(function () {\r\n        ghost.style.opacity = \"1\";\r\n    });\r\n\r\n    return {\r\n        move(x, y) {\r\n            ghost.style.transform = `translate(${x}px, ${y}px)`;\r\n        },\r\n        dispose() {\r\n            ghost.style.opacity = null;\r\n            setTimeout(function () {\r\n                ghost.remove();\r\n            }, 300);\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {SleekGrid} grid\r\n * @param columns\r\n * @param columnIndex\r\n * @param dragCell\r\n * @param initialX\r\n * @return {{dispose(): void, done, on(*=, *=): void}}\r\n */\r\nfunction createColumnShifter(grid, {columns, columnIndex}, dragCell, initialX) {\r\n\r\n    function packLeft(dragIndex, dropIndex) {\r\n        const swap = columns[dragIndex];\r\n        let column, left = swap.left;\r\n        for (let columnIndex = dragIndex; columnIndex < dropIndex; columnIndex++) {\r\n            column = columns[columnIndex] = columns[columnIndex + 1];\r\n            for (const cell of grid.positionColumnCells(column.id, column.left = left)) {\r\n                cell.columnIndex = columnIndex;\r\n            }\r\n            left += column.width;\r\n        }\r\n        column = columns[dropIndex] = swap;\r\n        for (const cell of grid.positionColumnCells(column.id, column.left = left)) {\r\n            cell.columnIndex = dropIndex;\r\n        }\r\n    }\r\n\r\n    function packRight(dropIndex, dragIndex) {\r\n        let swap = columns[dragIndex];\r\n        let column, left = columns[dropIndex].left;\r\n        for (let columnIndex = dropIndex; columnIndex < dragIndex; columnIndex++) {\r\n            column = swap;\r\n            swap = columns[columnIndex];\r\n            columns[columnIndex] = column;\r\n            for (const cell of grid.positionColumnCells(column.id, column.left = left)) {\r\n                cell.columnIndex = columnIndex;\r\n            }\r\n            left += column.width;\r\n        }\r\n        column = columns[dragIndex] = swap;\r\n        for (const cell of grid.positionColumnCells(column.id, column.left = left)) {\r\n            cell.columnIndex = dragIndex;\r\n        }\r\n    }\r\n\r\n    const dragOffset = centerX(dragCell) - initialX;\r\n    let dropIndex, dragIndex = columnIndex;\r\n\r\n    let lastX = initialX, delta = pageX => {\r\n        const delta = pageX - lastX;\r\n        lastX = pageX;\r\n        return delta;\r\n    };\r\n\r\n    let transitioning = false;\r\n    let ontransitionend = () => {\r\n        transitioning = false;\r\n    };\r\n\r\n    return {\r\n        set done(callback) {\r\n            ontransitionend = () => {\r\n                callback();\r\n                transitioning = false;\r\n            };\r\n        },\r\n\r\n        on(pageX, targetCell) {\r\n            const deltaX = delta(pageX);\r\n            const dragX = pageX + dragOffset;\r\n\r\n            if (!transitioning) {\r\n                dropIndex = targetCell.columnIndex;\r\n\r\n                if (deltaX > 0 && dropIndex > dragIndex) {\r\n                    const dropX = centerX(targetCell);\r\n                    if (dragX > dropX - 8) {\r\n                        packLeft(dragIndex, dropIndex);\r\n                        dragIndex = dropIndex;\r\n                        dragCell.addEventListener(\"transitionend\", ontransitionend);\r\n                        transitioning = true;\r\n                    }\r\n                }\r\n\r\n                if (deltaX < 0 && dropIndex < dragIndex) {\r\n                    const dropX = centerX(targetCell);\r\n                    if (dropX < dragX + 8) {\r\n                        packRight(dropIndex, dragIndex);\r\n                        dragIndex = dropIndex;\r\n                        dragCell.addEventListener(\"transitionend\", ontransitionend);\r\n                        transitioning = true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        dispose() {\r\n            if (dropIndex) {\r\n                const sorted = [...grid.properties.columns];\r\n                const fromId = columns[dragIndex].id;\r\n                const toId = columns[dragIndex + 1].id;\r\n                const fromIndex = sorted.findIndex(({id}) => id === fromId);\r\n                const [dragged] = sorted.splice(fromIndex, 1);\r\n                const toIndex = sorted.findIndex(({id}) => id === toId);\r\n                sorted.splice(toIndex, 0, dragged);\r\n                grid.requestUpdate({columns: sorted});\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction centerX(target) {\r\n    const {left, right} = target.getBoundingClientRect();\r\n    return (left + right) / 2;\r\n}\r\n\r\n/**\r\n *\r\n * @param {SleekGrid} grid\r\n * @param columns\r\n * @param initialLeft\r\n * @param initialRight\r\n * @return {{at(*=): void, dispose(): void}}\r\n */\r\nfunction createDropHighlight(grid, {columns}, {left: initialLeft, right: initialRight}) {\r\n\r\n    const dropHighlight = grid.shadowRoot.appendChild(document.createElement(\"div\"));\r\n    dropHighlight.id = \"drop-highlight\";\r\n\r\n    const {top, bottom, right: maxRight} = grid.viewPort.getBoundingClientRect();\r\n    dropHighlight.style.cssText = `\r\n            top:${top}px;\r\n            left:${initialLeft}px;\r\n            height:${bottom - top}px;\r\n            width:${Math.min(initialRight, maxRight) - initialLeft - 2}px;\r\n            transform: translateX(0);\r\n        `;\r\n\r\n    let current;\r\n\r\n    return {\r\n        at(target, force) {\r\n            if (force || target !== current) {\r\n                const {left, right} = limitedClientRect(target);\r\n                dropHighlight.style.transform = `translateX(${left - initialLeft + 1}px)`;\r\n                dropHighlight.style.width = `${right - left - 2}px`;\r\n                current = target;\r\n            }\r\n        },\r\n        dispose() {\r\n            dropHighlight.remove();\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Drag'n Drop Column Handler\r\n *\r\n * @type {function(*): void}\r\n */\r\nexport const dragndropColumnHandler = createDragHandler(function ({pageX: initialX, pageY: initialY}, cell, grid) {\r\n    const ctx = columnContext(cell);\r\n    const {column} = ctx;\r\n    const cellRect = limitedClientRect(cell);\r\n\r\n    const ghost = createGhostColumn(grid, ctx, cellRect);\r\n    const shifter = createColumnShifter(grid, ctx, cell, initialX);\r\n    const highlight = createDropHighlight(grid, ctx, cellRect);\r\n\r\n    shifter.done = () => {\r\n        // grid.viewPort.scrollLeft += 100;\r\n        highlight.at(cell, true);\r\n    };\r\n\r\n    grid.viewPort.classList.add(\"drag-n-drop\", \"drag-column\");\r\n    grid.queryColumnCells(column.id).forEach(cell => cell.classList.add(\"detached\"));\r\n\r\n    const {top: minY, bottom: maxY} = grid.viewPort.getBoundingClientRect();\r\n\r\n    const cellArea = cell.closest(\".area\");\r\n    let targetArea = cellArea;\r\n\r\n    return {\r\n        onMove({pageX, pageY}) {\r\n            let offsetX = pageX - initialX;\r\n            let offsetY = Math.min(maxY, Math.max(minY, pageY)) - initialY;\r\n            ghost.move(offsetX, offsetY);\r\n\r\n            const targetCell = grid.shadowRoot.elementFromPoint(pageX, pageY);\r\n            if (targetCell.classList.contains(\"header\")) {\r\n                targetArea = targetCell.closest(\".area\");\r\n                if (targetArea === cellArea) {\r\n                    highlight.at(cell);\r\n                    shifter.on(pageX, targetCell);\r\n                } else {\r\n                    highlight.at(targetArea);\r\n                }\r\n            }\r\n        },\r\n        onEnd() {\r\n            ghost.dispose();\r\n            highlight.dispose();\r\n            shifter.dispose();\r\n\r\n            if (targetArea !== cellArea) {\r\n                const {sticky} = grid.features;\r\n                const classList = targetArea.classList;\r\n                if (classList.contains(\"left-area\")) {\r\n                    sticky.left = {...sticky.left, [column.id]: true};\r\n                } else if (classList.contains(\"right-area\")) {\r\n                    sticky.right = {...sticky.right, [column.id]: true};\r\n                }\r\n                grid.requestUpdate({features: {...grid.features, sticky}});\r\n            }\r\n\r\n            grid.viewPort.classList.remove(\"drag-n-drop\", \"drag-column\");\r\n            grid.queryColumnCells(column.id).forEach(cell => cell.classList.remove(\"detached\"));\r\n        }\r\n    };\r\n});\r\n", "import {columnContext, createAutosizeHandler, createDragHandler} from \"../utils/index.mjs\";\r\n\r\nfunction dispatchResizeAction(grid, id, columnWidth) {\r\n    const {columns} = grid.properties;\r\n    columns[columns.findIndex(column => column.id === id)].width = columnWidth;\r\n}\r\n\r\nexport const autosizeWidthHandler = createAutosizeHandler((cell, grid) => {\r\n    const {\r\n        area,\r\n        columns,\r\n        columnIndex,\r\n        column\r\n    } = columnContext(cell);\r\n\r\n    const translation = Math.round(grid.autoColumnWidth(column) - column.width);\r\n    if (translation) {\r\n        column.width += translation;\r\n        area.width += translation;\r\n        grid.resizeColumnCells(column.id, column.width);\r\n        for (let column, nextIndex = columnIndex + 1; nextIndex < columns.length; nextIndex++) {\r\n            column = columns[nextIndex];\r\n            grid.positionColumnCells(column.id, column.left += translation);\r\n        }\r\n        dispatchResizeAction(grid, column.id, column.width);\r\n    }\r\n});\r\n\r\nexport const dragWidthHandler = createDragHandler(function ({pageX: lastX}, cell, grid) {\r\n    const {\r\n        area,\r\n        columns,\r\n        columnIndex,\r\n        column\r\n    } = columnContext(cell);\r\n\r\n    let translation = 0;\r\n    return {\r\n        onMove({pageX}, stop) {\r\n            let width = column.width + pageX - lastX;\r\n            if (column.maxWidth !== undefined) {\r\n                width = Math.min(width, column.maxWidth);\r\n            }\r\n            if (column.minWidth !== undefined) {\r\n                width = Math.max(width, column.minWidth);\r\n            } else {\r\n                width = Math.max(width, 20);\r\n            }\r\n            translation = Math.round(width - column.width);\r\n            if (translation) {\r\n                grid.resizeColumnCells(column.id, column.width += translation);\r\n                area.width += translation;\r\n                for (let column, nextIndex = columnIndex + 1; nextIndex < columns.length; nextIndex++) {\r\n                    column = columns[nextIndex];\r\n                    grid.positionColumnCells(column.id, column.left += translation);\r\n                }\r\n            }\r\n            lastX = pageX;\r\n            grid.refresh();\r\n        },\r\n        onEnd() {\r\n            dispatchResizeAction(grid, column.id, column.width);\r\n        }\r\n    };\r\n});\r\n", "export default {\r\n    arrowUp: \"M19.716 184.485l19.626 19.626c4.753 4.753 12.484 4.675 17.14-.173L134 123.22V468c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12V123.22l77.518 80.717c4.656 4.849 12.387 4.927 17.14.173l19.626-19.626c4.686-4.686 4.686-12.284 0-16.971L168.485 35.716c-4.686-4.686-12.284-4.686-16.971 0L19.716 167.515c-4.686 4.686-4.686 12.284 0 16.97z\",\r\n    arrowDown: \"M300.3 327.5l-19.6-19.6c-4.8-4.8-12.5-4.7-17.1.2L186 388.8V44c0-6.6-5.4-12-12-12h-28c-6.6 0-12 5.4-12 12v344.8l-77.5-80.7c-4.7-4.8-12.4-4.9-17.1-.2l-19.6 19.6c-4.7 4.7-4.7 12.3 0 17l131.8 131.8c4.7 4.7 12.3 4.7 17 0l131.8-131.8c4.6-4.7 4.6-12.3-.1-17z\",\r\n    ellipsis: \"M64 208c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zM16 104c0 26.5 21.5 48 48 48s48-21.5 48-48-21.5-48-48-48-48 21.5-48 48zm0 304c0 26.5 21.5 48 48 48s48-21.5 48-48-21.5-48-48-48-48 21.5-48 48z\",\r\n    search: \"M508.5 468.9L387.1 347.5c-2.3-2.3-5.3-3.5-8.5-3.5h-13.2c31.5-36.5 50.6-84 50.6-136C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c52 0 99.5-19.1 136-50.6v13.2c0 3.2 1.3 6.2 3.5 8.5l121.4 121.4c4.7 4.7 12.3 4.7 17 0l22.6-22.6c4.7-4.7 4.7-12.3 0-17zM208 368c-88.4 0-160-71.6-160-160S119.6 48 208 48s160 71.6 160 160-71.6 160-160 160z\"\r\n};\r\n", "import {dragndropColumnHandler} from \"../features/column-dnd.mjs\";\r\nimport {autosizeWidthHandler, dragWidthHandler} from \"../features/column-resize.mjs\";\r\nimport icons from \"../icons.mjs\";\r\nimport {SleekGrid} from \"../sleek-grid.mjs\";\r\nimport {useTemplate} from \"../utils/index.mjs\";\r\n\r\nSleekGrid.prototype.createHeaderRow = useTemplate(`\r\n    <div class=\"undefined header row r-undefined\" tabindex=\"-1\"></div>\r\n`);\r\n\r\nSleekGrid.prototype.updateHeaderRow = function updateHeaderRow(node, {row, rowIndex}) {\r\n    if (node.row !== row) {\r\n        node.setAttribute(\"row-id\", row.id);\r\n        node.classList.replace(node.classList[0], row.position);\r\n        node.style.transform = `translateY(${row.top}px)`;\r\n        node.style.height = `${row.height}px`;\r\n        node.row = row;\r\n\r\n        const padding = Math.min(8, Math.max(2, 2 + (row.height - 32) * 6 / 10));\r\n        node.style.setProperty(\"--search-input-padding\", `${padding}px`);\r\n    }\r\n    if (node.rowIndex !== rowIndex) {\r\n        node.classList.replace(node.classList[3], `r-${rowIndex}`);\r\n        node.rowIndex = rowIndex;\r\n    }\r\n};\r\n\r\nSleekGrid.prototype.createStub = useTemplate(`\r\n    <div class=\"undefined stub cell c-undefined\" tabindex=\"-1\">\r\n        <div class=\"handle width-handle\"></div>\r\n        <div class=\"handle height-handle\"></div>\r\n    </div>\r\n`);\r\n\r\nSleekGrid.prototype.updateStub = function updateStub(node, {column, columnIndex}) {\r\n    if (node.column !== column) {\r\n        node.classList.replace(node.classList[0], column.position);\r\n        node.setAttribute(\"column-id\", column.id);\r\n        node.style.left = `${column.left}px`;\r\n        node.style.width = `${column.width}px`;\r\n        node.column = column;\r\n    }\r\n    if (node.columnIndex !== columnIndex) {\r\n        node.classList.replace(`c-${node.columnIndex}`, `c-${columnIndex}`);\r\n        node.columnIndex = columnIndex;\r\n    }\r\n};\r\n\r\nSleekGrid.prototype.createColumnHeader = useTemplate(`\r\n    <div class=\"header cell c-undefined\" tabindex=\"-1\">\r\n        <div class=\"handle width-handle\"></div>\r\n        <div class=\"cell-content\">\r\n            <input class=\"search-input\" type=\"text\" autocomplete=\"off\" required value=\"\">\r\n            <hr class=\"search-hr\">\r\n            <label class=\"search-label\">\r\n                <p></p>\r\n                <svg class=\"sort-icon\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"${icons.arrowUp}\"></path></svg>\r\n            </label>\r\n            <svg class=\"menu-icon\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"${icons.ellipsis}\"></path></svg>\r\n        </div>\r\n    </div>\r\n`, function (cell) {\r\n    const handle = cell.firstChild;\r\n    const searchInput = cell.lastChild.firstChild;\r\n    const searchLabel = searchInput.nextSibling.nextSibling;\r\n    const menuIcon = searchLabel.nextSibling;\r\n\r\n    const grid = this;\r\n\r\n    let focused;\r\n    searchInput.addEventListener(\"focus\", () => {\r\n        focused = true;\r\n        grid.scrollIntoView(searchInput.closest(\".cell\"));\r\n    });\r\n    searchInput.addEventListener(\"blur\", () => focused = false);\r\n    searchInput.addEventListener(\"input\", event => {\r\n        const id = cell.getAttribute(\"column-id\");\r\n        grid.properties.columns.find(column => column.id === id).search = searchInput.value;\r\n        grid.requestUpdate({action: \"filter\", columns: [...grid.properties.columns]});\r\n    });\r\n\r\n    menuIcon.addEventListener(\"click\", (event) => {\r\n        const {left, top} = menuIcon.getBoundingClientRect();\r\n        const menu = document.createElement(\"dialog\");\r\n        menu.className = `ch menu`;\r\n        requestAnimationFrame(function () {\r\n            menu.setAttribute(\"open\", \"\");\r\n        });\r\n        menu.style.marginLeft = `${left - 4}px`;\r\n        menu.style.top = `${top}px;`;\r\n        menu.innerHTML = `\r\n            <div class=\"item\">Pin Column</div>\r\n            <div class=\"item\">Clear Search</div>\r\n            <div class=\"separator\"><div class=\"line\"></div></div>\r\n            <div class=\"item\">Hide Column</div>\r\n        `;\r\n        menu.addEventListener(\"click\", function () {\r\n            menu.removeAttribute(\"open\");\r\n            setTimeout(function () {\r\n                menu.remove();\r\n            }, 300);\r\n        });\r\n        grid.root.append(menu);\r\n    }, true);\r\n\r\n    searchLabel.addEventListener(\"click\", (event) => {\r\n        const {extentOffset, anchorOffset, focusNode} = grid.root.getSelection();\r\n        if (extentOffset === anchorOffset || focusNode.parentNode !== event.target) {\r\n            searchInput.focus();\r\n        }\r\n    }, false);\r\n\r\n    const sortIcon = searchLabel.lastChild;\r\n\r\n    sortIcon.addEventListener(\"pointerdown\", event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    });\r\n\r\n    sortIcon.addEventListener(\"click\", event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const id = cell.getAttribute(\"column-id\");\r\n        grid.requestUpdate({\r\n            action: \"sort\",\r\n            columns: [...grid.properties.columns.map(column => {\r\n                if (column.id === id) {\r\n                    return {...column, sort: !column.sort ? \"asc\" : column.sort === \"asc\" ? \"desc\" : undefined};\r\n                } else {\r\n                    return {...column, sort: undefined};\r\n                }\r\n            })]\r\n        });\r\n    });\r\n\r\n    if (grid.features.resize.columns) {\r\n        handle.addEventListener(\"dblclick\", autosizeWidthHandler);\r\n        handle.addEventListener(\"pointerdown\", dragWidthHandler);\r\n    }\r\n\r\n    if (grid.features.dnd.columns) {\r\n        searchLabel.addEventListener(\"pointerdown\", dragndropColumnHandler);\r\n    }\r\n});\r\n\r\nSleekGrid.prototype.updateColumnHeader = function updateColumnHeader(node, {column, columnIndex}) {\r\n    if (node.columnIndex !== columnIndex) {\r\n        node.classList.replace(`c-${node.columnIndex}`, `c-${columnIndex}`);\r\n        node.columnIndex = columnIndex;\r\n    }\r\n    if (node.column !== column) {\r\n        node.setAttribute(\"column-id\", column.id);\r\n        node.style.left = `${(column.left)}px`;\r\n        node.style.width = `${(column.width)}px`;\r\n        node.column = column;\r\n    }\r\n\r\n    const headerLabel = node.childNodes[1].childNodes[2];\r\n    headerLabel.firstChild.replaceWith(column.label);\r\n\r\n    const headerInput = node.childNodes[1].childNodes[0];\r\n    if (headerInput.value !== column.search) {\r\n        headerInput.value = column.search || \"\";\r\n        if (column.search) {\r\n            node.setAttribute(\"search\", column.search);\r\n        } else {\r\n            node.removeAttribute(\"search\");\r\n        }\r\n    }\r\n\r\n    if (column.sort) {\r\n        node.setAttribute(\"sort\", column.sort);\r\n    } else {\r\n        node.removeAttribute(\"sort\");\r\n    }\r\n};\r\n", "import {ColumnController} from \"../column-controller.mjs\";\r\nimport {RowController} from \"../row-controller.mjs\";\r\nimport {SleekGrid} from \"../sleek-grid.mjs\";\r\nimport {useTemplate} from \"../utils/index.mjs\";\r\nimport {defineStyleVariable, linkStyleVariable} from \"./grid-area.mjs\";\r\n\r\nSleekGrid.prototype.createRoot = useTemplate(`\r\n    <div id=\"root\">\r\n        <div class=\"row-shadow\"></div>\r\n        <div class=\"column-shadow\"></div>\r\n        <div id=\"view-port\">\r\n            <div id=\"sizer\"></div>\r\n            <!--top-left-->\r\n            <!--top-->\r\n            <!--top-right-->\r\n            <!--left-->\r\n            <!--center-->\r\n            <!--right-->\r\n            <!--bottom-left-->\r\n            <!--bottom-->\r\n            <!--bottom-right-->\r\n        </div>\r\n    </div>\r\n`, function (root) {\r\n\r\n    const viewPortElement = root.querySelector(\"#view-port\");\r\n\r\n    const treeWalker = document.createTreeWalker(viewPortElement, NodeFilter.SHOW_COMMENT);\r\n    while (treeWalker.nextNode()) {\r\n        const placeholder = treeWalker.currentNode;\r\n        let slot = null;\r\n        Object.defineProperty(viewPortElement, placeholder.textContent, {\r\n            get() {\r\n                return slot;\r\n            },\r\n            set(area) {\r\n                if (!area) area = placeholder;\r\n                if (!slot) slot = placeholder;\r\n                slot.replaceWith(area);\r\n                if (area === placeholder) {\r\n                    slot = null;\r\n                } else {\r\n                    slot = area;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const grid = this;\r\n\r\n    const center = viewPortElement[\"center\"] = grid.createArea(\"center\");\r\n    center.columnCtrl = new ColumnController(grid);\r\n    center.rowCtrl = new RowController(grid);\r\n    center.visibleRect = {...viewPortElement.getBoundingClientRect()};\r\n\r\n    center.setAttribute(\"scroll-x\",\"\");\r\n    center.setAttribute(\"scroll-y\",\"\");\r\n\r\n    defineStyleVariable(center, \"width\");\r\n    defineStyleVariable(center, \"height\");\r\n\r\n    const Y = [\"top\", \"bottom\"];\r\n    const X = [\"left\", \"right\"];\r\n\r\n    const {header, sticky} = grid.features;\r\n\r\n    viewPortElement.layout = function () {\r\n        for (const y of Y) {\r\n            let h = header[y];\r\n            let s = sticky[y];\r\n            if (h || s) {\r\n                let area = this[y];\r\n                if (!area) {\r\n                    area = this[y] = grid.createArea(y);\r\n                    area.rowCtrl = new RowController(grid);\r\n                    area.columnCtrl = center.columnCtrl;\r\n                    area.setAttribute(\"scroll-x\",\"\");\r\n                    defineStyleVariable(area, \"height\");\r\n                    linkStyleVariable(area, center, \"width\");\r\n                }\r\n                area.header = {[y]: h};\r\n            } else if (this[y]) {\r\n                this[y].height = 0;\r\n                this[y] = null;\r\n            }\r\n        }\r\n        for (const x of X) {\r\n            let h = header[x];\r\n            let s = sticky[x];\r\n            if (h || s) {\r\n                let area = this[x];\r\n                if (!area) {\r\n                    area = this[x] = grid.createArea(x);\r\n                    area.rowCtrl = center.rowCtrl;\r\n                    area.columnCtrl = new ColumnController(grid);\r\n                    area.setAttribute(\"scroll-y\",\"\");\r\n                    defineStyleVariable(area, \"width\");\r\n                    linkStyleVariable(area, center, \"height\");\r\n                }\r\n                area.header = {[x]: h};\r\n            } else if (this[x]) {\r\n                this[x].width = 0;\r\n                this[x] = null;\r\n            }\r\n        }\r\n        for (const y of Y) {\r\n            for (const x of X) {\r\n                const at = `${y}-${x}`;\r\n                if (this[y] && this[x]) {\r\n                    let area = this[at];\r\n                    if (!area) {\r\n                        area = this[at] = this[y][x] = this[x][y] = grid.createArea(at);\r\n                        area.columnCtrl = this[x].columnCtrl;\r\n                        area.rowCtrl = this[y].rowCtrl;\r\n                        linkStyleVariable(area, this[x], \"width\");\r\n                        linkStyleVariable(area, this[y], \"height\");\r\n                    }\r\n                } else {\r\n                    this[at] = null;\r\n                    if (this[y]) this[y][x] = null;\r\n                    if (this[x]) this[x][y] = null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    viewPortElement.refresh = function (rect) {\r\n        const {top, bottom, left, right, center} = this;\r\n        center.visibleTop = rect.top;\r\n        center.visibleBottom = rect.bottom;\r\n        center.visibleLeft = rect.left + (left?.width);\r\n        center.visibleRight = rect.right - (right?.width);\r\n        if (top) {\r\n            center.visibleTop += top.height;\r\n            top.visibleLeft = center.visibleLeft;\r\n            top.visibleRight = center.visibleRight;\r\n        }\r\n        if (bottom) {\r\n            center.visibleBottom -= bottom.height;\r\n            bottom.visibleLeft = center.visibleLeft;\r\n            bottom.visibleRight = center.visibleRight;\r\n        }\r\n        if (left) {\r\n            left.visibleTop = center.visibleTop;\r\n            left.visibleBottom = center.visibleBottom;\r\n        }\r\n        if (right) {\r\n            right.visibleTop = center.visibleTop;\r\n            right.visibleBottom = center.visibleBottom;\r\n        }\r\n    }\r\n});\r\n", "import {SleekGrid} from \"../sleek-grid.mjs\";\r\n\r\nSleekGrid.prototype.queryColumnCells = function (columnId) {\r\n    return this.viewPort.querySelectorAll(`[column-id=\"${columnId}\"]`);\r\n};\r\n\r\nSleekGrid.prototype.queryRowCells = function (rowId) {\r\n    return this.viewPort.querySelectorAll(`[row-id=\"${rowId}\"] .cell`);\r\n};\r\n\r\nSleekGrid.prototype.resizeColumnCells = function resizeColumnCells(id, width) {\r\n    const widthPx = `${width}px`;\r\n    for (const {style} of this.queryColumnCells(id)) {\r\n        style.width = widthPx;\r\n    }\r\n};\r\n\r\nSleekGrid.prototype.positionColumnCells = function positionColumnCells(id, left) {\r\n    const leftPx = `${left}px`;\r\n    const columnCells = this.queryColumnCells(id);\r\n    for (const {style} of columnCells) {\r\n        style.left = leftPx;\r\n    }\r\n    return columnCells;\r\n};\r\n\r\nSleekGrid.prototype.queryRowParts = function (rowId) {\r\n    return this.viewPort.querySelectorAll(`[row-id=\"${rowId}\"]`);\r\n};\r\n\r\nSleekGrid.prototype.resizeRowParts = function resizeRowParts(id, height) {\r\n    const heightPx = `${height}px`;\r\n    for (const {style} of this.queryRowParts(id)) {\r\n        style.height = heightPx;\r\n    }\r\n};\r\n\r\nSleekGrid.prototype.positionRowParts = function positionRowParts(id, top) {\r\n    const transform = `translateY(${top}px)`;\r\n    const rowParts = this.queryRowParts(id);\r\n    for (const {style} of rowParts) {\r\n        style.transform = transform;\r\n    }\r\n    return rowParts;\r\n};\r\n\r\n", "import {SleekGrid} from \"../sleek-grid.mjs\";\r\nimport {rowContext, useTemplate} from \"../utils/index.mjs\";\r\n\r\nclass Highlight extends HTMLDivElement {\r\n\r\n    at(columnIndex, rowIndex) {\r\n        const {\r\n            columnCtrl: {columns},\r\n            rowCtrl: {rows}\r\n        } = this.parentElement;\r\n        const {left, width} = columns[columnIndex];\r\n        const {top, height} = rows[rowIndex];\r\n        this.className = `c-${columnIndex} r-${rowIndex}`;\r\n        this.columnIndex = columnIndex;\r\n        this.rowIndex = rowIndex;\r\n        this.style.transform = `translate(${left}px,${top}px)`;\r\n        this.style.width = `${width}px`;\r\n        this.style.height = `${height}px`;\r\n\r\n        const {window, viewPort} = this.getRootNode().host;\r\n        const area = this.parentElement;\r\n        let scrollLeft = viewPort.scrollLeft;\r\n        let scrollTop = viewPort.scrollTop;\r\n        if (area.hasAttribute(\"scroll-x\")) {\r\n            if (left < window.left) {\r\n                scrollLeft = left;\r\n            } else {\r\n                let delta = left + columns[columnIndex].width - window.width - window.left - 1;\r\n                if (delta > 0) {\r\n                    scrollLeft += delta;\r\n                }\r\n            }\r\n        }\r\n        if (area.hasAttribute(\"scroll-y\")) {\r\n            if (top < window.top) {\r\n                scrollTop = top;\r\n            } else {\r\n                let delta = top + rows[rowIndex].height - window.height - window.top - 1;\r\n                if (delta > 0) {\r\n                    scrollTop += delta;\r\n                }\r\n            }\r\n        }\r\n        if (scrollLeft !== viewPort.scrollLeft || scrollTop !== viewPort.scrollTop) {\r\n            viewPort.scrollTo({left: scrollLeft, top: scrollTop, behavior: \"smooth\"});\r\n        }\r\n    }\r\n\r\n    move(hz, vt) {\r\n        const {\r\n            columnCtrl: {columns, leftIndex, rightIndex},\r\n            rowCtrl: {rows, topIndex, bottomIndex}\r\n        } = this.parentElement;\r\n        let {\r\n            columnIndex,\r\n            rowIndex\r\n        } = this;\r\n\r\n        this.at(\r\n            Math.max(0, Math.min(columnIndex + hz, columns.length - 1)),\r\n            Math.max(0, Math.min(rowIndex + vt, rows.length - 1))\r\n        );\r\n    };\r\n}\r\n\r\nSleekGrid.prototype.useHighlight = useTemplate(`<div id=\"highlight\"></div>`, function constructor(highlight) {\r\n    highlight.columnIndex = 0;\r\n    highlight.rowIndex = 0;\r\n    highlight.at = Highlight.prototype.at;\r\n    highlight.move = Highlight.prototype.move;\r\n\r\n    const {root} = this;\r\n    let active = false;\r\n\r\n    root.addEventListener(\"pointerdown\", event => {\r\n        const cell = event.target.closest(\".cell\");\r\n        if (cell && !cell.classList.contains(\"header\")) {\r\n            let {area} = rowContext(cell);\r\n            event.stopPropagation();\r\n            if (area.firstChild !== highlight) {\r\n                highlight?.replaceWith(document.createComment(\"highlight\"));\r\n                area.firstChild.replaceWith(highlight);\r\n                active = true;\r\n            }\r\n            highlight.at(cell.columnIndex, cell.parentElement.rowIndex);\r\n        } else {\r\n            if (active) {\r\n                highlight?.replaceWith(document.createComment(\"highlight\"));\r\n                active = false;\r\n            }\r\n        }\r\n    }, {capture: true, passive: true});\r\n});\r\n\r\nfunction zIndex(areaId) {\r\n    switch (areaId) {\r\n        case \"top-left-area\":\r\n            return 105;\r\n        case \"top-area\":\r\n            return 55;\r\n        case \"top-right-area\":\r\n            return 105;\r\n        case \"left-area\":\r\n            return 55;\r\n        case \"center-area\":\r\n            return 5;\r\n        case \"right-area\":\r\n            return 55;\r\n        case \"bottom-left-area\":\r\n            return 105;\r\n        case \"bottom-area\":\r\n            return 55;\r\n        case \"bottom-right-area\":\r\n            return 105;\r\n    }\r\n}\r\n", "import \"./components/grid-area.mjs\";\r\nimport \"./components/grid-row.mjs\";\r\nimport \"./components/header-row.mjs\";\r\nimport \"./components/root.mjs\";\r\n\r\nimport \"./utils/grid-api.mjs\";\r\n\r\nimport \"./features/highlight.mjs\";\r\nimport {SleekGrid} from \"./sleek-grid.mjs\";\r\n\r\ncustomElements.define(\"sleek-grid\", SleekGrid);\r\nexport {useTemplate} from \"./utils/index.mjs\";\r\n"],
  "mappings": "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",
  "names": []
}
